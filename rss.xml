<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>fzdwx</title>
        <link>https://fzdwx.github.io</link>
        <description>What your say ?</description>
        <lastBuildDate>Sun, 16 Apr 2023 22:17:28 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en-US</language>
        <image>
            <title>fzdwx</title>
            <url>https://fzdwx.github.io/favicon.ico</url>
            <link>https://fzdwx.github.io</link>
        </image>
        <copyright>© 2023-forever fzdwx</copyright>
        <item>
            <title><![CDATA[在看的影视剧]]></title>
            <link>https://fzdwx.github.io/content/issues/1.html</link>
            <guid>https://fzdwx.github.io/content/issues/1.html</guid>
            <pubDate>Fri, 31 Mar 2023 11:07:07 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote>
<p>记录一些影视作品的观看记录哈哈</p>
</blockquote>
<h2 id="最近在看" tabindex="-1">最近在看 <a class="header-anchor" href="#最近在看" aria-label="Permalink to &quot;最近在看&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="动漫" tabindex="-1">动漫 <a class="header-anchor" href="#动漫" aria-label="Permalink to &quot;动漫&quot;">&ZeroWidthSpace;</a></h3>
<ClientOnly>
  <Douban code="35337634"/>
  <Douban code="36129263"/>
  <Douban code="35937645"/>
  <Douban code="35604677" to="https://ddys.art/the-witch-from-mercury/"/>
  <Douban code="35417872" to="https://ddys.art/isekaiojisan/"/>
  <Douban code="35853587"/>
</ClientOnly>
<h2 id="已看完" tabindex="-1">已看完 <a class="header-anchor" href="#已看完" aria-label="Permalink to &quot;已看完&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="动漫-1" tabindex="-1">动漫 <a class="header-anchor" href="#动漫-1" aria-label="Permalink to &quot;动漫&quot;">&ZeroWidthSpace;</a></h3>
<ClientOnly>
  <Douban code="35351365"/>
  <Douban code="35256195" to="https://ddys.art/chainsaw-man" />
  <Douban code="35679830" to="https://www.bilibili.com/bangumi/play/ss39696" />
  <Douban code="35366293" to="https://ddys.art/bocchi-the-rock/"/>
  <Douban code="30238385" to="https://www.bilibili.com/bangumi/play/ss25742?spm_id_from=333.337.0.0"/>
</ClientOnly>
<h3 id="电影" tabindex="-1">电影 <a class="header-anchor" href="#电影" aria-label="Permalink to &quot;电影&quot;">&ZeroWidthSpace;</a></h3>
<ClientOnly>
  <Douban code="2124724" />
  <Douban code="1304624" to="https://www.bilibili.com/bangumi/play/ss32937" />
  <Douban code="1303173" />
  <Douban code="1291550" />
  <Douban code="27060077" />
  <Douban code="30270746" />
  <Douban code="30128916" />
  <Douban code="30323380" />
</ClientOnly>
<h3 id="电视剧" tabindex="-1">电视剧 <a class="header-anchor" href="#电视剧" aria-label="Permalink to &quot;电视剧&quot;">&ZeroWidthSpace;</a></h3>
<ClientOnly>
<Douban code="30198955" to="https://ddys.art/the-peripheral/" />
<Douban code="30291070" to="https://ddys.art/reborn-rich/" />
<Douban code="35314632" to="https://ddys.art/the-glory-2022" />
<Douban code="35465232" />
</ClientOnly>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[并发控制-同步]]></title>
            <link>https://fzdwx.github.io/content/docs/ostep/2023-03-28-ostep-sync.html</link>
            <guid>https://fzdwx.github.io/content/docs/ostep/2023-03-28-ostep-sync.html</guid>
            <pubDate>Tue, 28 Mar 2023 12:55:51 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="怎么实现一个并发安全的计数器" tabindex="-1">怎么实现一个并发安全的计数器 <a class="header-anchor" href="#怎么实现一个并发安全的计数器" aria-label="Permalink to &quot;怎么实现一个并发安全的计数器&quot;">&ZeroWidthSpace;</a></h2>
<p>这是一个并发安全的计数器, 它遵循了简单,正确,易懂的原则, 但有一个致命缺陷就是 <strong>性能</strong></p>
<details class="details custom-block"><summary>简单的并发安全的计数器代码实现</summary>
<div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Add</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">struct</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span></span>
<span class="line"><span style="color: #A6ACCD">    count </span><span style="color: #C792EA">int</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">a </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Add</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Get</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> a</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">count</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">a </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Add</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">incr</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    a</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">count</span><span style="color: #89DDFF">++</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">a </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Add</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">decr</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> a</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    a</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">count</span><span style="color: #89DDFF">--</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div></details>
<p>跑一个 benchmark, 可以看到加锁和不加锁之间差了近 50 倍</p>
<Gist user="fzdwx" id="3e9dd948b38f12ef39ae760374a1a016" height="h-[400px]" /><h3 id="分段加锁" tabindex="-1">分段加锁 <a class="header-anchor" href="#分段加锁" aria-label="Permalink to &quot;分段加锁&quot;">&ZeroWidthSpace;</a></h3>
<p>通过多个局部计数器和一个全局计数器来实现一个逻辑计数器. 比如说在一个有 8 个 CPU 的计算机中, 共有 8 个局部计数器和一个全局计数器, 并且每个计数器都有一把锁</p>
<p>原理是,如果某个核心要增加就修改它们对应的局部计数器的值(并用当前 CPU 上的锁),所以不会有不同 CPU 的线程的竞争.然后间隔一段时间就同步到全局计数器上,并把当前的局部计数器重置.</p>
<p>这种实现的问题是: 间隔越长性能越好但准确性就越低</p>
<details class="details custom-block"><summary>代码实现</summary>
<div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Counter</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">struct</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">	global    </span><span style="color: #C792EA">int</span></span>
<span class="line"><span style="color: #A6ACCD">	glock     sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span></span>
<span class="line"><span style="color: #A6ACCD">	local     </span><span style="color: #89DDFF">[]</span><span style="color: #C792EA">int</span></span>
<span class="line"><span style="color: #A6ACCD">	llock     </span><span style="color: #89DDFF">[]</span><span style="color: #A6ACCD">sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span></span>
<span class="line"><span style="color: #A6ACCD">	threshold </span><span style="color: #C792EA">int</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">NewCounter</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">threshold </span><span style="color: #C792EA">int</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> threadNum </span><span style="color: #C792EA">int</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Counter </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">var</span><span style="color: #A6ACCD"> llock </span><span style="color: #89DDFF">[]</span><span style="color: #A6ACCD">sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">var</span><span style="color: #A6ACCD"> local </span><span style="color: #89DDFF">[]</span><span style="color: #C792EA">int</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> threadNum</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">++</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		llock </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">llock</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span><span style="color: #89DDFF">{})</span></span>
<span class="line"><span style="color: #A6ACCD">		local </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&amp;</span><span style="color: #A6ACCD">Counter</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		global</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">    </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">		glock</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">     sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Mutex</span><span style="color: #89DDFF">{},</span></span>
<span class="line"><span style="color: #A6ACCD">		local</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">     local</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">		llock</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">     llock</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">		threshold</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> threshold</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">c </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Counter</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Add</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">threadId </span><span style="color: #C792EA">int</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">	c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">llock</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">llock</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">]++</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">threshold </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">glock</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">global </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">glock</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">c </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Counter</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Get</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">	c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">glock</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">glock</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">range</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">llock</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">global </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">local</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #A6ACCD">		c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">llock</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	global </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">global</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> global</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">const</span><span style="color: #A6ACCD"> N </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000000</span></span>
<span class="line"><span style="color: #89DDFF">const</span><span style="color: #A6ACCD"> threadCount </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">16</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">BenchmarkCounter</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">b </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">testing</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">B</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> b</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">N</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">++</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		b</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">StopTimer</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		c </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">NewCounter</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100000</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> threadCount</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">		b</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">StartTimer</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">var</span><span style="color: #A6ACCD"> wg sync</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">WaitGroup</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> threadCount</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">++</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">			wg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Add</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #89DDFF; font-style: italic">go</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">func(</span><span style="color: #A6ACCD">threadId </span><span style="color: #C792EA">int</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">				</span><span style="color: #89DDFF; font-style: italic">defer</span><span style="color: #A6ACCD"> wg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Done</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">				</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> j </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> j </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> N</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> j</span><span style="color: #89DDFF">++</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">					c</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Add</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">threadId</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">				</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #89DDFF">}(</span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">		wg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Wait</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">		assert</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Equal</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">b</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> N</span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">threadCount</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> c</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Get</span><span style="color: #89DDFF">())</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div></details>
<p>这就是一种分段锁的思想的体现, 把 <code>(N-1) x threshold</code> 到 <code>N x threshold</code> 分别加锁</p>
<h2 id="条件变量" tabindex="-1">条件变量 <a class="header-anchor" href="#条件变量" aria-label="Permalink to &quot;条件变量&quot;">&ZeroWidthSpace;</a></h2>
<p>在多线程的情况下, 我们可能经常需要等待某一个条件生效, 比如说父线程等待所有子线程都运行完毕( join )</p>
<p>假定下面的程序实现完全正确(count 会按照实现进行正确的--), 下面使用了一个共享变量来记录还在工作的线程的数量,这种实现显而易见是浪费 CPU 的,那么怎么进行改进?</p>
<div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">var</span><span style="color: #A6ACCD"> count </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> count</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">++</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #89DDFF; font-style: italic">go</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">func(){</span></span>
<span class="line"><span style="color: #A6ACCD">				time</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sleep</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">xxx</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">				count</span><span style="color: #89DDFF">--</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #89DDFF">}()</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> count </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">			</span><span style="color: #89DDFF; font-style: italic">return</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><h3 id="wait-与-singal" tabindex="-1">wait 与 singal <a class="header-anchor" href="#wait-与-singal" aria-label="Permalink to &quot;wait 与 singal&quot;">&ZeroWidthSpace;</a></h3>
<p>条件变量有两种操作, wait 和 signal, wait 会阻塞当前线程,直到条件变量被 signal 为止, signal 会唤醒一个等待在条件变量上的线程</p>
<p>这是一个用 Java 使用条件变量的例子, 它实现了一个顺序打印 A,B,C 的功能, 通过一把锁和三个条件变量来实现</p>
<p>核心代码就是 run 方法里面, 通过 while 来不断的运行</p>
<ol>
<li>首先获取锁</li>
<li>输出 message</li>
<li>唤醒下一个线程 singal (其他线程就会运行到获取锁的步骤)</li>
<li>将自己睡眠 await (释放锁)</li>
</ol>
<Gist user="fzdwx" id="d8c7836d3367f0f114f5d7310130cb3d" height="h-[450px]" /><p>这个一个用条件变量实现 join 的例子, <code>Print</code> 启动了一个 Daemon 的线程,正常情况下这个程序启动后会立即结束, 但我们实现了一个 join 的功能, 使得主线程会等待子线程结束后才结束</p>
<Gist user="fzdwx" id="c0279b33be19f1136bdb465e9df5ba1e" height="h-[450px]" />]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[并发控制-互斥]]></title>
            <link>https://fzdwx.github.io/content/docs/ostep/2023-03-28-ostep-mutex.html</link>
            <guid>https://fzdwx.github.io/content/docs/ostep/2023-03-28-ostep-mutex.html</guid>
            <pubDate>Tue, 28 Mar 2023 12:09:47 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="为什么需要互斥" tabindex="-1">为什么需要互斥? <a class="header-anchor" href="#为什么需要互斥" aria-label="Permalink to &quot;为什么需要互斥?&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>从指令集的角度看, 一个简单的 ++ 操作可能会被编译为 3 条, load -&gt; add -&gt; store, 一条指令是原子的, 但是 3 条指令就不一定了 —— 操作系统的 Trap 机制</li>
<li>假如这个程序是多线程的, 且这个变量是共享的, 那么就会竞态条件, 比如说第一个线程 load 了 0 并进行 add 得到 1, 在它 store 之前,它被切换出去了, 然后第二个线程来了并运行了一套 load -&gt;add -&gt; store 写入了 0. 这样当第一个线程再次运行时它不知道第二个线程已经对这个变量进行了操作, 从而导致了错误的结果.</li>
</ol>
<h2 id="怎么实现互斥" tabindex="-1">怎么实现互斥? <a class="header-anchor" href="#怎么实现互斥" aria-label="Permalink to &quot;怎么实现互斥?&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="原子交换" tabindex="-1">原子交换 <a class="header-anchor" href="#原子交换" aria-label="Permalink to &quot;原子交换&quot;">&ZeroWidthSpace;</a></h3>
<p>这是一种通过硬件指令实现的互斥, 也是最简单的一种, 但是它的效率不高, 下面是一个简单的示例:</p>
<div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">type</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Mutex</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">struct</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    locked </span><span style="color: #C792EA">int32</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">m </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Mutex</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">xchg</span><span style="color: #89DDFF">(&amp;</span><span style="color: #A6ACCD">m</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">locked</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic">// spin</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  m</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">locked </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">m </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Mutex</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Unlock</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  m</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">locked </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">xchg</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">addr </span><span style="color: #89DDFF">*</span><span style="color: #C792EA">int32</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> new </span><span style="color: #C792EA">int32</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int32</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  old </span><span style="color: #89DDFF">:=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">addr</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">addr </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> new</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> old</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>当第一个线程调用了 Lock() 时, 它会将 locked 的值从 0 改为 1, 但是当第二个线程调用 Lock() 时, 它会发现 locked 的值已经是 1 了, 所以它会一直 spin 等待第一个线程将 locked 的值改为 0, 这样就实现了互斥.</p>
<p>而 xchg 就是操作系统提供给我们的一个原子交换指令, 它的作用是将 addr 的值与 new 交换, 并返回 addr 的旧值.</p>
<h3 id="能不能更高效点" tabindex="-1">能不能更高效点? <a class="header-anchor" href="#能不能更高效点" aria-label="Permalink to &quot;能不能更高效点?&quot;">&ZeroWidthSpace;</a></h3>
<p>上面这种锁的优点就是实现简单, 就是会浪费很多 CPU 时间, 比如说一个线程在等待另一个线程释放锁时, 它会一直 spin 等待, 这样就会浪费很多 CPU 时间</p>
<h4 id="主动出让时间片" tabindex="-1">主动出让时间片 <a class="header-anchor" href="#主动出让时间片" aria-label="Permalink to &quot;主动出让时间片&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre v-pre class="shiki material-theme-palenight has-highlighted-lines" ><code><span class="line"><span style="color: #89DDFF">func</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">m </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">Mutex</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Lock</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">xchg</span><span style="color: #89DDFF">(&amp;</span><span style="color: #A6ACCD">m</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">locked</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">{</span></span>
<span class="line highlighted"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">yield</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  m</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">locked </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>当 xchg 失败时, 可以主动调用 yield() 出让时间片, 这样就不会浪费 CPU 时间了.</p>
<p>但是这样同样也有个问题, 假如有很多线程都在等待这个锁, 那么它们都会主动出让时间片, 这样同样效率也很低, 因为这个涉及到线程的切换</p>
<h4 id="休眠" tabindex="-1">休眠 <a class="header-anchor" href="#休眠" aria-label="Permalink to &quot;休眠&quot;">&ZeroWidthSpace;</a></h4>
<p>使用休眠的方式来实现互斥, 假设有一个线程列表存放获取这把锁的线程, 当它获取锁失败时就放入休眠列表, 当锁被释放时, 就唤醒休眠列表中的线程.</p>
<p>在 linux 中, futex 就是实现了类似这种机制</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[一个 VitePress 博客主题]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-03-27-vitepress-blog-theme.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-03-27-vitepress-blog-theme.html</guid>
            <pubDate>Mon, 27 Mar 2023 11:53:12 GMT</pubDate>
            <description><![CDATA[<blockquote>
<p>这两天写了一个 vitepress blog 主题, 用来替换掉 hugo, 原本的<a href="https://github.com/fzdwx/blog-history" target="_blank" rel="noreferrer">博客存档</a></p>
</blockquote>
<p>在功能上尽可能的和原本的主题一致,比如说:</p>
<ol>
<li>post, 用于存放普通的博客</li>
<li>issue, 一种可以动态更新的博客, 个人以前用来存放一些资料和收藏夹等
<ul>
<li>现在跟以前一样都是用 Gtihub action 来实现的, 不同点是现在直接提供了一个 cli 工具, 用户可以随时拉取</li>
<li>以前则全部都是用 action 实现的 - <a href="/content/posts/2022-10-15-about-github-action.html">相关介绍</a></li>
</ul>
</li>
<li>docs, 用于存放文档/笔记. 得益于使用 vitepress, 所以文档的功能很强大, 有侧边栏,大纲等
<ul>
<li>并且添加了大纲自动生成功能, 根据一个 <code>group</code> 来进行分组</li>
</ul>
</li>
</ol>
<p>我还提供了一个 cli 工具, 它可以同来辅助使用 vitepress-blog-theme:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">init</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 初始化主题</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">sync</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 同步 issue</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">new</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 创建 page</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">update</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 同步主题</span></span>
<span class="line"></span></code></pre>
</div>]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>这两天写了一个 vitepress blog 主题, 用来替换掉 hugo, 原本的<a href="https://github.com/fzdwx/blog-history" target="_blank" rel="noreferrer">博客存档</a></p>
</blockquote>
<p>在功能上尽可能的和原本的主题一致,比如说:</p>
<ol>
<li>post, 用于存放普通的博客</li>
<li>issue, 一种可以动态更新的博客, 个人以前用来存放一些资料和收藏夹等
<ul>
<li>现在跟以前一样都是用 Gtihub action 来实现的, 不同点是现在直接提供了一个 cli 工具, 用户可以随时拉取</li>
<li>以前则全部都是用 action 实现的 - <a href="/content/posts/2022-10-15-about-github-action.html">相关介绍</a></li>
</ul>
</li>
<li>docs, 用于存放文档/笔记. 得益于使用 vitepress, 所以文档的功能很强大, 有侧边栏,大纲等
<ul>
<li>并且添加了大纲自动生成功能, 根据一个 <code>group</code> 来进行分组</li>
</ul>
</li>
</ol>
<p>我还提供了一个 cli 工具, 它可以同来辅助使用 vitepress-blog-theme:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">init</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 初始化主题</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">sync</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 同步 issue</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">new</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 创建 page</span></span>
<span class="line"><span style="color: #FFCB6B">bang</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">update</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 同步主题</span></span>
<span class="line"></span></code></pre>
</div><hr>
<p>主题地址: <a href="https://github.com/fzdwx/vitepress-blog-theme" target="_blank" rel="noreferrer">https://github.com/fzdwx/vitepress-blog-theme</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器字体加重不生效]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-03-22-web-font.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-03-22-web-font.html</guid>
            <pubDate>Wed, 22 Mar 2023 12:32:27 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote>
<p>最近在研究 vitepress 的主题, 准备把博客从 hugo 改成 vitepress (还是前端写页面比较有优势).</p>
</blockquote>
<p>在写主题时, 发现我添加的自定义的字体设置 <code>font-weight</code> 怎么也不生效, 但是在 hugo 中是可以的.</p>
<p>最后一个个 <code>F12</code> 一个个样式的去尝试, 发现 vitepress 的 body 会带下面的样式:</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">text-rendering</span><span style="color: #A6ACCD">: optimizeLegibility;</span></span>
<span class="line"><span style="color: #A6ACCD">direction: ltr;</span></span>
<span class="line"><span style="color: #FFCB6B">font-synthesis</span><span style="color: #A6ACCD">: style;</span></span>
<span class="line"><span style="color: #A6ACCD">-webkit-font-smoothing: antialiased;</span></span>
<span class="line"></span></code></pre>
</div><p>问题就是出在 <code>font-synthesis: style;</code> 上, 改成 <code>weight</code> 即可.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[记录学习 jyyos 操作系统课]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-03-05-jyyos_c_compile.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-03-05-jyyos_c_compile.html</guid>
            <pubDate>Sun, 05 Mar 2023 14:27:31 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote>
<p>最近也是又追起了南京大学的操作系统课(前面几次都中途放弃了),记录一下</p>
<ol>
<li>课程网站: <a href="http://jyywiki.cn/OS/2023/" target="_blank" rel="noreferrer">http://jyywiki.cn/OS/2023/</a></li>
<li>课程代码仓库: <a href="https://git.nju.edu.cn/jyy/os-workbench" target="_blank" rel="noreferrer">https://git.nju.edu.cn/jyy/os-workbench</a></li>
<li>课程视频: <a href="https://www.bilibili.com/video/BV1xX4y1d7v2" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1xX4y1d7v2</a></li>
<li>OSTEP: <a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" target="_blank" rel="noreferrer">https://pages.cs.wisc.edu/~remzi/OSTEP/</a> <a href="https://github.com/remzi-arpacidusseau/ostep-translations/tree/master/chinese" target="_blank" rel="noreferrer">中文</a></li>
</ol>
</blockquote>
<h3 id="_1-首先就是编译第三节课的一个-demo-时-找不到-ld-等命令" tabindex="-1">1. 首先就是编译第三节课的一个 demo 时,找不到 ld 等命令 <a class="header-anchor" href="#_1-首先就是编译第三节课的一个-demo-时-找不到-ld-等命令" aria-label="Permalink to &quot;1. 首先就是编译第三节课的一个 demo 时,找不到 ld 等命令&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p><a href="http://jyywiki.cn/OS/2023/build/lect3.ipynb" target="_blank" rel="noreferrer">http://jyywiki.cn/OS/2023/build/lect3.ipynb</a> demo('hello-os', 'i/hello-os')</p>
</blockquote>
<p>由于我使用的是 archlinux, <code>binutils</code> 编译出来的 ld, gcc 等命令都是不带 x86 的前缀的,
而 Makefile 中定义的都是带 x86 的, 所以需要建立一个链接:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">ln</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-s</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/usr/bin/ld</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/usr/bin/x86_64-linux-gnu-ld</span></span>
<span class="line"></span></code></pre>
</div><div class="tip custom-block"><p class="custom-block-title">来自 chatgpt 的解释:</p>
<p>该命令创建了一个名为“x86_64-linux-gnu-ld”的符号链接,指向“/usr/bin/ld”.这个符号链接可以被用作“x86_64-linux-gnu-ld”二进制文件的替代品.
符号链接是一种特殊的文件类型,它是一个指向另一个文件的文件,可以用来在文件系统中创建指向其他文件或目录的别名.</p>
<p>在 Linux 系统中,“/usr/bin/ld”是一个连接器（linker）,用于将多个目标文件合并为单个可执行文件.通过创建“x86_64-linux-gnu-ld”的符号链接,可以使该链接器的功能可以在不同的系统上使用,并且不需要更改可执行文件的代码. <a href="http://jyywiki.cn/OS/2023/build/lect3.ipynb" target="_blank" rel="noreferrer">123</a>
这个符号链接通常被用于交叉编译（cross-compiling）应用程序,这种情况下,应用程序在不同的硬件平台上运行.</p>
</div>
<h3 id="_2-使用-vscode-等编辑器时-第一个问题的代码中头文件无法跳转" tabindex="-1">2. 使用 vscode 等编辑器时,第一个问题的代码中头文件无法跳转 <a class="header-anchor" href="#_2-使用-vscode-等编辑器时-第一个问题的代码中头文件无法跳转" aria-label="Permalink to &quot;2. 使用 vscode 等编辑器时,第一个问题的代码中头文件无法跳转&quot;">&ZeroWidthSpace;</a></h3>
<p>使用 bear 生成 compile_commands.json, 然后编辑器就会自动识别了</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">bear</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">make</span></span>
<span class="line"></span></code></pre>
</div><div class="tip custom-block"><p class="custom-block-title">来自 chatgpt 的解释:</p>
<p>该命令使用 Bear 和 Make 工具,用于自动捕获 Makefile 的编译命令和编译期间的调用链.</p>
<p>具体来说,Bear 是一个工具,它可以将系统调用跟踪器（strace）输出转换为 JSON 格式的文件,这个文件包含了所有运行期间的系统调用.
Make 是一个工具,它用于根据 Makefile 规则自动构建和编译程序.</p>
<p>当这两个工具一起使用时,可以使用“bear -- make”命令自动捕获 Makefile 的编译命令和编译期间的调用链,这个过程可以在后续的调试中使用.
该命令的执行将产生一个 JSON 格式的文件,其中包含编译期间的所有系统调用和它们的参数.这个文件可以用于调试,性能优化,以及自动化编译和构建系统的开发.</p>
<p>总之,“bear -- make”命令可以帮助程序员更好地理解他们的代码在编译期间所做的事情,以及识别代码中的潜在问题.</p>
</div>
<h3 id="_3-写一个-pstree-m1" tabindex="-1">3. 写一个 pstree - M1 <a class="header-anchor" href="#_3-写一个-pstree-m1" aria-label="Permalink to &quot;3. 写一个 pstree - M1&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p><a href="http://jyywiki.cn/OS/2023/labs/M1" target="_blank" rel="noreferrer">http://jyywiki.cn/OS/2023/labs/M1</a></p>
</blockquote>
<p>实现思路:</p>
<ol>
<li>扫描 <code>/proc/</code> 目录下所有为数字的文件夹</li>
<li>读取 <code>/proc/{pid}/status</code> 文件</li>
<li>读取 name 以及 ppid</li>
<li>建树并打印树结构</li>
</ol>
<h3 id="_4-关于编译新的-os-workbench" tabindex="-1"><s>4. 关于编译新的 os-workbench</s> <a class="header-anchor" href="#_4-关于编译新的-os-workbench" aria-label="Permalink to &quot;~~4. 关于编译新的 os-workbench~~&quot;">&ZeroWidthSpace;</a></h3>
<p><s>今天尝试下载了一下 2023 年的代码仓库,没想到可以下了</s></p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">~</span><span style="color: #A6ACCD">~git clone https://git.nju.edu.cn/jyy/os-workbench.git~~</span></span>
<span class="line"></span></code></pre>
</div><p><s>然后我就拉了 L0 来跑,但是怎么样都跑不动: <code>[-Werror=array-bounds]</code> 是关于数组越界的</s>
<s>文件是 <code>os-workbench/abstract-machine/am/build/x86_64-qemu/src/x86/qemu/ioe.o:433</code></s></p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">~</span><span style="color: #A6ACCD">~git pull origin L0~~</span></span>
<span class="line"></span></code></pre>
</div><p><s>解决办法是在 <code>os-workbench/abstract-machine/Makefile</code> 的 <code>CFLAGS</code> 最后添加 <code>-Wno-array-bounds</code></s></p>
<h3 id="_5-跑起来-2023-版的代码" tabindex="-1">5. 跑起来 2023 版的代码 <a class="header-anchor" href="#_5-跑起来-2023-版的代码" aria-label="Permalink to &quot;5. 跑起来 2023 版的代码&quot;">&ZeroWidthSpace;</a></h3>
<p>昨天晚上在我在本机的 L0 代码下 <code>make run</code> 是跑不起来的,qemu 正常启动了但是界面是黑的,环境是</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">Linux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">archlinux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">6.2.2-arch1-</span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #FFCB6B">qemu</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">7.2</span></span>
<span class="line"><span style="color: #FFCB6B">gcc</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">12.2.1</span></span>
<span class="line"></span></code></pre>
</div><p>最后只能曲线救国,在 docker 中 build, 然后在本机跑 qemu (docker 中不方便按图形化界面)</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">FROM</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">ubuntu:</span><span style="color: #F78C6C">22.04</span></span>
<span class="line"><span style="color: #FFCB6B">ENV</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEBIAN_FRONTEND=noninteractive</span></span>
<span class="line"><span style="color: #FFCB6B">RUN</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">apt-get</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">update</span></span>
<span class="line"><span style="color: #FFCB6B">RUN</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">apt-get</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">install</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-y</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">build-essential</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">git</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">gcc-multilib</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">qemu-system</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">strace</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">gdb</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">sudo</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">python3</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">libsdl2-dev</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">libreadline-dev</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">llvm-</span><span style="color: #F78C6C">11</span></span>
<span class="line"><span style="color: #FFCB6B">RUN</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">useradd</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-ms</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/bin/bash</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">user</span></span>
<span class="line"><span style="color: #FFCB6B">USER</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">user</span></span>
<span class="line"><span style="color: #FFCB6B">WORKDIR</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/home/users</span></span>
<span class="line"></span></code></pre>
</div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">docker</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">build</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-t</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">jyyos</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">.</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># os-workbench</span></span>
<span class="line"><span style="color: #FFCB6B">docker</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">run</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--rm</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-it</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-v</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">PWD</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">:/mnt</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-w</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/mnt</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">jyyos</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">bash</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># exit docker : os-workbench/kernel</span></span>
<span class="line"><span style="color: #FFCB6B">make</span></span>
<span class="line"><span style="color: #FFCB6B">qemu-system-x86_64</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-serial</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">mon:stdio</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-machine</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">accel=tcg</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-smp</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-drive</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">format=raw,file=./build/kernel-x86_64-qemu</span></span>
<span class="line"></span></code></pre>
</div><p>可能还是编译出了问题, 使用 docker 编译后就没有出现第 4 个问题</p>
<p><img src="/images/12333.png" alt="run kernel"></p>
<h3 id="_6-在-abstractmachine-中显示一张图片-l0" tabindex="-1">6. 在 AbstractMachine 中显示一张图片 - L0 <a class="header-anchor" href="#_6-在-abstractmachine-中显示一张图片-l0" aria-label="Permalink to &quot;6. 在 AbstractMachine 中显示一张图片 - L0&quot;">&ZeroWidthSpace;</a></h3>
<p>这个我记得去年是做一个可以动的游戏,根据键盘的输入去做一些响应,而今年的是只要打印一张图片,大概思路:</p>
<ol>
<li><code>xxd -i xxx.png &gt; img_data.h</code></li>
<li>遍历这个数组,取 rgb 并调用 <code>draw_title</code></li>
<li>解析参数,获取要输出的分辨率,然后在获得宽高的缩放比,最后获得对于的像素点</li>
</ol>
<p><img src="/images/1001.png" alt="1800x1200"></p>
<p><img src="/images/2023-03-16-21-45-20.png" alt="320x240"></p>
<p>感觉我的实现有问题,只是放大了左上角</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[用 Rust 写的弹窗翻译软件]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-02-13-asd.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-02-13-asd.html</guid>
            <pubDate>Mon, 13 Feb 2023 12:10:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>项目地址： <a href="https://github.com/fzdwx/popup-translation" target="_blank" rel="noreferrer">https://github.com/fzdwx/popup-translation</a>, 目前已经用 tauri + vue3 改写了</p>
<p>支持两种模式:</p>
<ol>
<li>聚合模式, 一次性请求所有的平台</li>
<li>单平台模式, 一次请求一个平台</li>
</ol>
<p>然后还添加了配置功能, 可以自定义快捷键等, 以及最重要的 划词翻译, 也就是选中文本后, 按下快捷键, 就会弹出翻译窗口.</p>
<p>不过只测试 linux(x11) 上的运行情况</p>
<p>使用 tauri 的话好处就是打包分发的包很小, 但是缺点就是编译太慢了, 好在可以用 github action release.</p>
<p><img src="/images/2023-03-28-17-57-41.png" alt="123123"></p>
<p><img src="/images/2023-03-28-17-30-31.png" alt="123123"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[使用 tmux + st]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-02-12-tmux-st.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-02-12-tmux-st.html</guid>
            <pubDate>Sun, 12 Feb 2023 08:10:50 GMT</pubDate>
            <description><![CDATA[<p><a href="https://st.suckless.org/" target="_blank" rel="noreferrer">st</a> 是一个非常的简单的终端软件,它对我的来说只少一个功能,就是多路服用(上下左右切分窗口),这在其他终端软件中都有提供,比如说 wezterm.</p>
<p>而 tmux 刚好可以提供这个功能:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">tmux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">split-window</span><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic"># 向下切分</span></span>
<span class="line"><span style="color: #FFCB6B">tmux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">split-window</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-h</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 向右切分</span></span>
<span class="line"></span></code></pre>
</div><p>然后就可以在 st 中设置快捷键:</p>
<details class="details custom-block"><summary>Details</summary>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">/* 切分 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">sp</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux split-window</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">sph</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux split-window -h</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/* 切换窗口 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gd</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -D</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gu</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -U</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gr</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -R</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gl</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -L</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/* 调整窗口大小 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rd</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -D 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">ru</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -U 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rr</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -R 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rl</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -L 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> Shortcut shortcuts</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_minus</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> sp </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_backslash</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> sph </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Up</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gu</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Down</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gd</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Left</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gl</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Right</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gr</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Up</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> ru</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Down</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rd</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Left</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rl</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Right</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rr</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">};</span></span>
<span class="line"></span></code></pre>
</div></details>
<p>最后关闭 tmux 的 status line, 因为我只需要它的 pane 功能,其他的都太碍眼了.</p>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">set </span><span style="color: #89DDFF">-</span><span style="color: #A6ACCD">g status off</span></span>
<span class="line"></span></code></pre>
</div><p><img src="https://user-images.githubusercontent.com/65269574/218301130-4e361459-e366-4793-b94f-a8b4b07a47e4.gif" alt="preview"></p>
]]></description>
            <content:encoded><![CDATA[<p><a href="https://st.suckless.org/" target="_blank" rel="noreferrer">st</a> 是一个非常的简单的终端软件,它对我的来说只少一个功能,就是多路服用(上下左右切分窗口),这在其他终端软件中都有提供,比如说 wezterm.</p>
<p>而 tmux 刚好可以提供这个功能:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">tmux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">split-window</span><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic"># 向下切分</span></span>
<span class="line"><span style="color: #FFCB6B">tmux</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">split-window</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-h</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 向右切分</span></span>
<span class="line"></span></code></pre>
</div><p>然后就可以在 st 中设置快捷键:</p>
<details class="details custom-block"><summary>Details</summary>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">/* 切分 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">sp</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux split-window</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">sph</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux split-window -h</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/* 切换窗口 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gd</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -D</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gu</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -U</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gr</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -R</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">gl</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux select-pane -L</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/* 调整窗口大小 */</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rd</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -D 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">ru</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -U 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rr</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -R 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD">rl</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/bin/sh</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">-c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">tmux resize-pane -L 2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">externalpipe</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">NULL</span><span style="color: #F07178"> </span><span style="color: #89DDFF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">static</span><span style="color: #A6ACCD"> Shortcut shortcuts</span><span style="color: #C792EA">[]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_minus</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> sp </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_backslash</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> sph </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Up</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gu</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Down</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gd</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Left</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gl</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> MODKEY</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Right</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> gr</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Up</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> ru</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Down</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rd</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Left</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rl</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F07178"> ControlMask</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> XK_Right</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> externalpipe</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">.v </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> rr</span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">};</span></span>
<span class="line"></span></code></pre>
</div></details>
<p>最后关闭 tmux 的 status line, 因为我只需要它的 pane 功能,其他的都太碍眼了.</p>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">set </span><span style="color: #89DDFF">-</span><span style="color: #A6ACCD">g status off</span></span>
<span class="line"></span></code></pre>
</div><p><img src="https://user-images.githubusercontent.com/65269574/218301130-4e361459-e366-4793-b94f-a8b4b07a47e4.gif" alt="preview"></p>
<hr>
<p>我的分支: <a href="https://github.com/fzdwx/st" target="_blank" rel="noreferrer">https://github.com/fzdwx/st</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[linux 连接蓝牙耳机]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-02-09-bluetooth.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-02-09-bluetooth.html</guid>
            <pubDate>Thu, 09 Feb 2023 04:50:21 GMT</pubDate>
            <content:encoded><![CDATA[<p>以 Archlinux 为例子</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">bluetoothctl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">power</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">on</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 扫描</span></span>
<span class="line"><span style="color: #FFCB6B">bluetoothctl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">scan</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">on</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 结对</span></span>
<span class="line"><span style="color: #FFCB6B">bluetoothctl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">pair</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">xxx</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 连接</span></span>
<span class="line"><span style="color: #FFCB6B">bluetoothctl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">connect</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">xxx</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 设置 蓝牙为默认输出</span></span>
<span class="line"><span style="color: #FFCB6B">pavucontrol</span></span>
<span class="line"></span></code></pre>
</div><p><img src="/images/20230209125317.png" alt="设置 蓝牙为默认输出"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[自定义一个 Neovim bufferline]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-02-01-bufline.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-02-01-bufline.html</guid>
            <pubDate>Wed, 01 Feb 2023 15:59:53 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote>
<p>现在比较流行的 buffer line 插件是 <a href="https://github.com/akinsho/bufferline.nvim" target="_blank" rel="noreferrer">akinsho/bufferline</a>,但是我感觉他太重了,而且不好看.比如说它可以跟 lsp 集成,可以切换各种 tab/buffer 模式等,但是不一定每个人都需要,而且各个顺序都固定了,总之就是<em>我想造轮子</em>: <a href="https://github.com/fzdwx/bufline.nvim.git" target="_blank" rel="noreferrer">fzdwx/bufline.nvim</a></p>
</blockquote>
<p>在 nvim 中定义 tabline 可以使用 <code>vim.opt.tabline=xxx</code> 来设置, 比如说下面这段代码,就很容易的实现一个 buffer line：</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">_G</span><span style="color: #A6ACCD">.</span><span style="color: #82AAFF">qweqweqwe</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #82AAFF">retrun</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">this is my line</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">end</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">-- config</span></span>
<span class="line"><span style="color: #A6ACCD">vim.</span><span style="color: #FFCB6B">opt</span><span style="color: #A6ACCD">.</span><span style="color: #FFCB6B">tabline</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">%!v:lua.qweqweqwe()</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"></span></code></pre>
</div><p><img src="/images/20230202002815.png" alt="Show"></p>
<p>那么接下来就很容易想到:</p>
<ol>
<li>获取所有 buffer</li>
<li>获取 buffer 对应文件的信息
<ul>
<li>比如说文件名称</li>
<li>显示文件 icon(由 <a href="https://github.com/nvim-tree/nvim-web-devicons" target="_blank" rel="noreferrer">nvim-tree/nvim-web-devicons</a> 支持)</li>
</ul>
</li>
<li>支持高亮</li>
</ol>
<p>如何实现的就不赘述了,如果有兴趣可以查看: <a href="https://github.com/fzdwx/bufline.nvim.git" target="_blank" rel="noreferrer">fzdwx/bufline.nvim</a>. 目前所有的内容都可以自定义：</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">folder</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic">-- 入参是 buffer 数量,要求返回 Group: {hl,str}</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">dirName</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">-- 入参是当前 buffer id, 要求返回 Group</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">devicon</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">-- 入参是当前 buffer id,&quot;Sel/NoSel&quot;,是否选中, 要求返回 Group</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">title</span><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic">-- 入参是当前 buffer id,&quot;Sel/NoSel&quot;, 要求返回 Group</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">modified</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic">-- 入参是当前 buffer id, 要求返回 str</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">separator</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">-- 要求返回 Group</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">-- 下面这两个方法也可以自定义,需要用户自己保证正确性</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">cell</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic">-- 每个 buffer 对应的信息,入参是当前 buffer id,当前选择的buffer id,要求返回 group 列表</span></span>
<span class="line"><span style="color: #A6ACCD">M.</span><span style="color: #FFCB6B">bufline</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">-- 构造整个 bufline</span></span>
<span class="line"></span></code></pre>
</div><p><code>str</code> 就是具体内容, <code>hl</code> 就是要高亮标签, 例如 <code>BufLineFolder</code>当前支持：</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">BufLineTitleSel</span></span>
<span class="line"><span style="color: #A6ACCD">BufLineTitleNoSel</span></span>
<span class="line"><span style="color: #A6ACCD">BufLineFill</span></span>
<span class="line"><span style="color: #A6ACCD">BufLine</span></span>
<span class="line"><span style="color: #A6ACCD">BufLineFolder</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div><p>这些高亮标签都没有默认设置,需要用户自定义,例如:</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">vim.cmd([[au ColorScheme * hi BufLineTitleSel gui=none guibg=&#39;#282C34&#39; guifg=&#39;#5C6370&#39;]])</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div><p>设置高亮遇到的问题,当设置 icon 的背景为空时,有背景颜色的 icon 跟没有的会一大一小,后来没办法,只能让它都开启颜色的,也就是没选中的 buffer 也会开启颜色跟 bufferline 的一样.</p>
<p>在 lazy 中使用:</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">fzdwx/bufline.nvim</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">    event </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">BufEnter</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">    dependencies </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">nvim-tree/nvim-web-devicons</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">    },</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">config</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">local</span><span style="color: #A6ACCD"> buf </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">bufline</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        buf.</span><span style="color: #82AAFF">setup</span><span style="color: #A6ACCD">({</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">-- 自定义 separator</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #82AAFF">separator</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">                    str </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"></span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">                    hl </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">                }</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #89DDFF; font-style: italic">end</span></span>
<span class="line"><span style="color: #A6ACCD">        })</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">end</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">},</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Wayland下的窗口管理器： Hyprland]]></title>
            <link>https://fzdwx.github.io/content/posts/2023-01-26-hyprland.html</link>
            <guid>https://fzdwx.github.io/content/posts/2023-01-26-hyprland.html</guid>
            <pubDate>Thu, 26 Jan 2023 03:04:48 GMT</pubDate>
            <content:encoded><![CDATA[<p>今天简单尝试了一下 <a href="https://hyprland.org/" target="_blank" rel="noreferrer">Hyprland</a>,它的功能类似于 <a href="/content/posts/2022-09-29-dwm.html">DWM</a> + picom 的组合.只是粗略的尝试了一下,发现还是有一些问题:</p>
<ol>
<li>分屏的时候,扩展屏幕的光标不显示
<ul>
<li>设置 <code>WLR_NO_HARDWARE_CURSORS=1</code>  即可解决</li>
</ul>
</li>
<li>扩展屏幕不时有一些黑块闪烁
<ul>
<li>替换安装包为 <code>hyprland-nvidia-git</code>  即可解决</li>
</ul>
</li>
<li>waybar 有一点用的不爽,它的 workspaces 不是每个屏幕都是独立的(DWM 中的 tag 功能)</li>
</ol>
<p>当然它还是有一些好处的:</p>
<ol>
<li>不打任何补丁就有很好的可用性</li>
<li>自带了一些动画效果</li>
<li>配置文件热加载(即每次修改就会立即生效)
<ul>
<li>这一点好评,DWM 是每次修改了配置都要重新 <code>make</code></li>
</ul>
</li>
</ol>
<p>但是我还是选择继续使用 DWM,因为它没有什么必须切换的理由,而且有一些我常用的功能在 Hyprland 中没有找到替代的,加上我的 DWM 的配置也趋于稳定了,也新增了可以点击的 status bar（Hyprland 下使用waybar 可以做到这个功能）.</p>
<details class="details custom-block"><summary>相关代码</summary>
<p>安装脚本:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic"># 安装 hyperland</span></span>
<span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">hyprland-nvidia-git</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 安装 waybar</span></span>
<span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">waybar-hyprland-git</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 安装 hyprland share</span></span>
<span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">xdg-desktop-portal-hyprland-git</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 安装 rofi for wayland</span></span>
<span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">rofi-lbonn-wayland-git</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 安装 壁纸切换</span></span>
<span class="line"><span style="color: #FFCB6B">git</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clone</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">https://github.com/Horus645xx/swww</span></span>
<span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">swww</span></span>
<span class="line"><span style="color: #FFCB6B">cargo</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">build</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--release</span></span>
<span class="line"><span style="color: #FFCB6B">cp</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/target/release/swww</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/usr/bin</span></span>
<span class="line"><span style="color: #FFCB6B">cp</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/target/release/swww-daemon</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/usr/bin</span></span>
<span class="line"><span style="color: #FFCB6B">swww</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">init</span></span>
<span class="line"><span style="color: #FFCB6B">swww</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">img</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--transition-type</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">left</span><span style="color: #A6ACCD">  </span><span style="color: #C3E88D">~/Pictures/bg/0494e945880511ebb6edd017c2d2eca2.png</span></span>
<span class="line"></span></code></pre>
</div><p>供参考的启动脚本:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> LIBVA_DRIVER_NAME</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">nvidia</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> XDG_SESSION_TYPE</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">wayland</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> GBM_BACKEND</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">nvidia-drm</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> __GLX_VENDOR_LIBRARY_NAME</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">nvidia</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> WLR_NO_HARDWARE_CURSORS</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># fix cursor</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># Example IME Support: fcitx5</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> GTK_IM_MODULE</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">fcitx5</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> QT_IM_MODULE</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">fcitx5</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> XMODIFIERS</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">@im=fcitx5</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> SDL_IM_MODULE</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">fcitx5</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> GLFW_IM_MODULE</span><span style="color: #89DDFF">=</span><span style="color: #C3E88D">ibus</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">exec</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">Hyprland</span></span>
<span class="line"></span></code></pre>
</div><p>~/.config/hypr/hyprland.conf:</p>
<div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">########################################################################################</span></span>
<span class="line"><span style="color: #A6ACCD">AUTOGENERATED HYPR CONFIG.</span></span>
<span class="line"><span style="color: #A6ACCD">PLEASE USE THE CONFIG PROVIDED IN THE GIT REPO /examples/hypr.conf AND EDIT IT,</span></span>
<span class="line"><span style="color: #A6ACCD">OR EDIT THIS ONE ACCORDING TO THE WIKI INSTRUCTIONS.</span></span>
<span class="line"><span style="color: #A6ACCD">########################################################################################</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">#</span></span>
<span class="line"><span style="color: #A6ACCD"># Please note not all available settings / options are set here.</span></span>
<span class="line"><span style="color: #A6ACCD"># For a full list, see the wiki</span></span>
<span class="line"><span style="color: #A6ACCD">#</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># See https://wiki.hyprland.org/Configuring/Monitors/</span></span>
<span class="line"><span style="color: #A6ACCD">monitor=,preferred,auto,auto</span></span>
<span class="line"><span style="color: #A6ACCD">#monitor=eDP-1-1, 1920x1080@144, 1920x0, 1</span></span>
<span class="line"><span style="color: #A6ACCD">#monitor=HDMI-0, 1920x1080@60, 0x0, 1</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># See https://wiki.hyprland.org/Configuring/Keywords/ for more</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Execute your favorite apps at launch</span></span>
<span class="line"><span style="color: #A6ACCD"># exec-once = waybar &amp; hyprpaper &amp; firefox</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">exec-once = fcitx5</span></span>
<span class="line"><span style="color: #A6ACCD">exec-once = flameshot</span></span>
<span class="line"><span style="color: #A6ACCD">exec-once = /opt/clash/cfw</span></span>
<span class="line"><span style="color: #A6ACCD">exec-once = waybar</span></span>
<span class="line"><span style="color: #A6ACCD">#exec-once = dunst</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Source a file (multi-file configs)</span></span>
<span class="line"><span style="color: #A6ACCD"># source = ~/.config/hypr/myColors.conf</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">#misc {</span></span>
<span class="line"><span style="color: #A6ACCD">#    no_vfr = 1</span></span>
<span class="line"><span style="color: #A6ACCD">#}</span></span>
<span class="line"><span style="color: #A6ACCD"># For all categories, see https://wiki.hyprland.org/Configuring/Variables/</span></span>
<span class="line"><span style="color: #A6ACCD">input {</span></span>
<span class="line"><span style="color: #A6ACCD">    kb_layout = us</span></span>
<span class="line"><span style="color: #A6ACCD">    kb_variant =</span></span>
<span class="line"><span style="color: #A6ACCD">    kb_model =</span></span>
<span class="line"><span style="color: #A6ACCD">    kb_options =</span></span>
<span class="line"><span style="color: #A6ACCD">    kb_rules =</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    follow_mouse = 1</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    touchpad {</span></span>
<span class="line"><span style="color: #A6ACCD">        natural_scroll = no</span></span>
<span class="line"><span style="color: #A6ACCD">    }</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">general {</span></span>
<span class="line"><span style="color: #A6ACCD">    # See https://wiki.hyprland.org/Configuring/Variables/ for more</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    gaps_in = 5</span></span>
<span class="line"><span style="color: #A6ACCD">    gaps_out = 20</span></span>
<span class="line"><span style="color: #A6ACCD">    border_size = 2</span></span>
<span class="line"><span style="color: #A6ACCD">    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg</span></span>
<span class="line"><span style="color: #A6ACCD">    col.inactive_border = rgba(595959aa)</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    layout = dwindle</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">decoration {</span></span>
<span class="line"><span style="color: #A6ACCD">    # See https://wiki.hyprland.org/Configuring/Variables/ for more</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    rounding = 10</span></span>
<span class="line"><span style="color: #A6ACCD">    blur = yes</span></span>
<span class="line"><span style="color: #A6ACCD">    blur_size = 3</span></span>
<span class="line"><span style="color: #A6ACCD">    blur_passes = 1</span></span>
<span class="line"><span style="color: #A6ACCD">    blur_new_optimizations = on</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    drop_shadow = yes</span></span>
<span class="line"><span style="color: #A6ACCD">    shadow_range = 4</span></span>
<span class="line"><span style="color: #A6ACCD">    shadow_render_power = 3</span></span>
<span class="line"><span style="color: #A6ACCD">    col.shadow = rgba(1a1a1aee)</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">animations {</span></span>
<span class="line"><span style="color: #A6ACCD">    enabled = yes</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    bezier = myBezier, 0.05, 0.9, 0.1, 1.05</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">    animation = windows, 1, 7, myBezier</span></span>
<span class="line"><span style="color: #A6ACCD">    animation = windowsOut, 1, 7, default, popin 80%</span></span>
<span class="line"><span style="color: #A6ACCD">    animation = border, 1, 10, default</span></span>
<span class="line"><span style="color: #A6ACCD">    animation = fade, 1, 7, default</span></span>
<span class="line"><span style="color: #A6ACCD">    animation = workspaces, 1, 6, default</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">dwindle {</span></span>
<span class="line"><span style="color: #A6ACCD">    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more</span></span>
<span class="line"><span style="color: #A6ACCD">    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below</span></span>
<span class="line"><span style="color: #A6ACCD">    preserve_split = yes # you probably want this</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">master {</span></span>
<span class="line"><span style="color: #A6ACCD">    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more</span></span>
<span class="line"><span style="color: #A6ACCD">    new_is_master = true</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD">gestures {</span></span>
<span class="line"><span style="color: #A6ACCD">    # See https://wiki.hyprland.org/Configuring/Variables/ for more</span></span>
<span class="line"><span style="color: #A6ACCD">    workspace_swipe = off</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Example per-device config</span></span>
<span class="line"><span style="color: #A6ACCD"># See https://wiki.hyprland.org/Configuring/Keywords/#executing for more</span></span>
<span class="line"><span style="color: #A6ACCD">device:epic mouse V1 {</span></span>
<span class="line"><span style="color: #A6ACCD">    sensitivity = -0.5</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Example windowrule v1</span></span>
<span class="line"><span style="color: #A6ACCD"># windowrule = float, ^(kitty)$</span></span>
<span class="line"><span style="color: #A6ACCD"># Example windowrule v2</span></span>
<span class="line"><span style="color: #A6ACCD"># windowrulev2 = float,class:^(kitty)$,title:^(kitty)$</span></span>
<span class="line"><span style="color: #A6ACCD"># See https://wiki.hyprland.org/Configuring/Window-Rules/ for more</span></span>
<span class="line"><span style="color: #A6ACCD">#</span></span>
<span class="line"><span style="color: #A6ACCD"># 定义 class 带 float 的都初始为 float 启动</span></span>
<span class="line"><span style="color: #A6ACCD">windowrulev2 = float,class:^(float)$</span></span>
<span class="line"><span style="color: #A6ACCD">windowrulev2 = noborder,class:^(noborder)$</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># See https://wiki.hyprland.org/Configuring/Keywords/ for more</span></span>
<span class="line"><span style="color: #A6ACCD">$mainMod = SUPER</span></span>
<span class="line"><span style="color: #A6ACCD">$term = wezterm</span></span>
<span class="line"><span style="color: #A6ACCD">$term_float = wezterm start --class float</span></span>
<span class="line"><span style="color: #A6ACCD">$rofi = rofi -show window -show-icons</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># start term</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod,       Return,       exec, $term</span></span>
<span class="line"><span style="color: #A6ACCD"># start float term</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod,   minus,        exec, $term_float</span></span>
<span class="line"><span style="color: #A6ACCD"># start launch</span></span>
<span class="line"><span style="color: #A6ACCD">bind = ALT,        SPACE,        exec, $rofi</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># kill window</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, Q, killactive,</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, P, pseudo, # dwindle</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, J, togglesplit, # dwindle</span></span>
<span class="line"><span style="color: #A6ACCD"># super + f 全屏窗口</span></span>
<span class="line"><span style="color: #A6ACCD">bind=$mainMod,F,fullscreen,0</span></span>
<span class="line"><span style="color: #A6ACCD"># super + space 将窗口切换为浮动</span></span>
<span class="line"><span style="color: #A6ACCD">bind=$mainMod,SPACE,togglefloating,active</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># 切换聚焦窗口</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPER,left,movefocus,l</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPER,right,movefocus,r</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPER,up,movefocus,u</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPER,down,movefocus,d</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># 将当前窗口移动 可以一直移动</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPERSHIFT,left,movewindow,l</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPERSHIFT,right,movewindow,r</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPERSHIFT,up,movewindow,u</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPERSHIFT,down,movewindow,d</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># 切换工作空间</span></span>
<span class="line"><span style="color: #A6ACCD">bind=SUPER,TAB,workspace,previous</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 1, workspace, 1</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 2, workspace, 2</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 3, workspace, 3</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 4, workspace, 4</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 5, workspace, 5</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 6, workspace, 6</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 7, workspace, 7</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 8, workspace, 8</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 9, workspace, 9</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, 0, workspace, 10</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># alt+super + 方向键 控制窗口大小</span></span>
<span class="line"><span style="color: #A6ACCD">bind=$mainMod,comma,resizeactive,-20 0</span></span>
<span class="line"><span style="color: #A6ACCD">bind=$mainMod,period,resizeactive,20 0</span></span>
<span class="line"><span style="color: #A6ACCD">bind=ALT_SUPER,up,resizeactive,0 -20</span></span>
<span class="line"><span style="color: #A6ACCD">bind=ALT_SUPER,down,resizeactive,0 20</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Move active window to a workspace with mainMod + SHIFT + [0-9]</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 1, movetoworkspace, 1</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 2, movetoworkspace, 2</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 3, movetoworkspace, 3</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 4, movetoworkspace, 4</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 5, movetoworkspace, 5</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 6, movetoworkspace, 6</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 7, movetoworkspace, 7</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 8, movetoworkspace, 8</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 9, movetoworkspace, 9</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT, 0, movetoworkspace, 10</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># shift + super + left/right 移动窗口 到下一个或上一个工作区</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT,Left,movetoworkspace,e-1</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod SHIFT,right,movetoworkspace,e+1</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Scroll through existing workspaces with mainMod + scroll</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, mouse_down, workspace, e+1</span></span>
<span class="line"><span style="color: #A6ACCD">bind = $mainMod, mouse_up, workspace, e-1</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"># Move/resize windows with mainMod + LMB/RMB and dragging</span></span>
<span class="line"><span style="color: #A6ACCD">bindm = $mainMod, mouse:272, movewindow</span></span>
<span class="line"><span style="color: #A6ACCD">bindm = $mainMod, mouse:273, resizewindow</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div></details>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[RISC-V 简介]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-12-10-risc-v.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-12-10-risc-v.html</guid>
            <pubDate>Sat, 10 Dec 2022 12:41:41 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="resource" tabindex="-1">Resource <a class="header-anchor" href="#resource" aria-label="Permalink to &quot;Resource&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><a href="https://inst.eecs.berkeley.edu/~cs61c/sp21/resources-pdfs/riscvcard.pdf" target="_blank" rel="noreferrer">RISC-V Green Card</a></li>
<li><a href="https://inst.eecs.berkeley.edu/~cs61c/sp21/resources-pdfs/RISCV_Calling_Convention.pdf" target="_blank" rel="noreferrer">RISC-V Call convertion</a></li>
<li><a href="https://github.com/fzdwx/fzdwx.github.io/releases/download/v1.0/p.h.pdf" target="_blank" rel="noreferrer">P&amp;H(RISC-V)</a></li>
</ol>
<p>在汇编语言中没有变量这个概念,汇编语言通常操作的是<strong>寄存器</strong>.算术指令的操作数必须取自寄存器,内建于硬件的特殊位置(CPU 内？).</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p><strong>寄存器</strong>（Register）是<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E8%99%95%E7%90%86%E5%99%A8" title="中央处理器" target="_blank" rel="noreferrer">中央处理器</a>内用来暂存指令、<a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E6%93%9A" title="数据" target="_blank" rel="noreferrer">数据</a>和<a href="https://zh.wikipedia.org/wiki/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80" title="内存地址" target="_blank" rel="noreferrer">地址</a>的<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%85%A6%E8%A8%98%E6%86%B6%E9%AB%94" title="电脑存储器" target="_blank" rel="noreferrer">电脑存储器</a>.寄存器的存贮容量有限,读写速度非常快.在<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%85%A6%E6%9E%B6%E6%A7%8B" title="计算机体系结构" target="_blank" rel="noreferrer">计算机体系结构</a>里,寄存器存储在已知时间点所作计算的中间结果,通过快速地访问数据来加速<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E8%85%A6%E7%A8%8B%E5%BC%8F" title="计算机程序" target="_blank" rel="noreferrer">计算机程序</a>的执行.</p>
</div>
<h2 id="risc-v-card" tabindex="-1">RISC-V Card <a class="header-anchor" href="#risc-v-card" aria-label="Permalink to &quot;RISC-V Card&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="risc-v-操作数" tabindex="-1">RISC-V 操作数 <a class="header-anchor" href="#risc-v-操作数" aria-label="Permalink to &quot;RISC-V 操作数&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="/images/20221210211515.png" alt="123"></p>
<ul>
<li>如果寄存器的大小是 64 位 则称为<strong>双字</strong>,32 位 则是<strong>单字</strong>.</li>
<li>x<sub>0</sub> 被硬连接到 0
<ul>
<li><code>add x3, x4, x0</code> =&gt; <code>x3 = x4</code> (x0 is hard-wired to value 0)</li>
</ul>
</li>
</ul>
<h2 id="汇编指令" tabindex="-1">汇编指令 <a class="header-anchor" href="#汇编指令" aria-label="Permalink to &quot;汇编指令&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/images/20221210211545.png" alt=""></p>
<p><img src="/images/3.png" alt=""></p>
<h2 id="存储操作数" tabindex="-1">存储操作数 <a class="header-anchor" href="#存储操作数" aria-label="Permalink to &quot;存储操作数&quot;">&ZeroWidthSpace;</a></h2>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>将数据从内存复制到寄存器的数据传输指令称为 <em>载入指令(<code>load</code>)</em>.在 RISC-V 中指令是 <strong>ld</strong>,表示取双字.</p>
</div>
<h3 id="一个从数组中取值的-c-程序-写出汇编代码" tabindex="-1">一个从数组中取值的 C 程序,写出汇编代码 <a class="header-anchor" href="#一个从数组中取值的-c-程序-写出汇编代码" aria-label="Permalink to &quot;一个从数组中取值的 C 程序,写出汇编代码&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">g </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> h </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> A</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">];</span></span>
<span class="line"></span></code></pre>
</div><p>A 是一个 100 个双字组成的数组,g, h 分别存储在 x20, x21 中,数组起始地址或<em>基址</em>位于 x22 中.</p>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">ld x9, </span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">(x22) // x9 = A[</span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x21, x20, x9</span><span style="color: #676E95; font-style: italic">; // x21 = x20 + x9</span></span>
<span class="line"></span></code></pre>
</div><p>存放基址的寄存器(x22)被称为<em>基址寄存器</em>, 数据传输指令中的 8 称为<em>偏移量</em>.</p>
<p><img src="/images/20221212130603.png" alt="实际的RISC-V内存地址和内存中双字的内容. 双字地址是 8 的倍数,同理单字地址是 4 的倍数"></p>
<div class="tip custom-block"><p class="custom-block-title">大端与小端编址</p>
<p>计算机分为两种,一种使用最左边或“大端”字节的地址作为双字地址,另一种使用最右端或“小端”字节的地址作为双字地址.</p>
<p>RISC-V 使用小端 .由于仅在以双字形式和 8 个单独字节访问相同数据时,字节顺序才有影响,因此大多情况不需要关系“大小端”.</p>
</div>
<p>所以为了上面的代码获得正确的字节地址加到 x22 这个寄存器的偏移量为 64（8x8）.</p>
<p>与载入指令相反的指令通常被成为<em>存储指令(store)</em>,从寄存器复制数据到内存.指令是<code>sd</code>,表示存储双字.</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>在一些体系结构中,字的起始地址必须是 4 的倍数,双字的起始地址必须是 8 的倍数.该要求成为<em>对齐限制</em></p>
</div>
<p>RISC-V 和 Intel x86 没有对齐限制,但 MIPS 有这个限制.</p>
<p><img src="/images/20221212152022.png" alt=""></p>
<h3 id="使用-load-和-store-编译生成指令" tabindex="-1">使用 load 和 store 编译生成指令 <a class="header-anchor" href="#使用-load-和-store-编译生成指令" aria-label="Permalink to &quot;使用 load 和 store 编译生成指令&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">A</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">12</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> h </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> A</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">8</span><span style="color: #89DDFF">];</span></span>
<span class="line"></span></code></pre>
</div><p>h 存放在 x21 中,A 的基址存放在 x22 中.</p>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">ld x9, </span><span style="color: #F78C6C">64</span><span style="color: #A6ACCD">(x22)  // x9 = A[</span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x9, x21, x9 // x9 = h + A[</span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">sd x9, </span><span style="color: #F78C6C">96</span><span style="color: #A6ACCD">(x22)  // A[</span><span style="color: #F78C6C">12</span><span style="color: #A6ACCD">] = x9</span></span>
<span class="line"></span></code></pre>
</div><h3 id="将字符串复制程序编译为汇编" tabindex="-1">将字符串复制程序编译为汇编 <a class="header-anchor" href="#将字符串复制程序编译为汇编" aria-label="Permalink to &quot;将字符串复制程序编译为汇编&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">void</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">strcpy</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #C792EA">[]</span><span style="color: #89DDFF">,</span><span style="color: #C792EA">char</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">y</span><span style="color: #C792EA">[]</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #C792EA">size_t</span><span style="color: #F07178"> i</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">	i </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #89DDFF">((</span><span style="color: #A6ACCD">x</span><span style="color: #89DDFF">[</span><span style="color: #F07178">i</span><span style="color: #89DDFF">]</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">y</span><span style="color: #89DDFF">[</span><span style="color: #F07178">i</span><span style="color: #89DDFF">])</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">\0</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">		i </span><span style="color: #89DDFF">+=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>x, y 的基址存放在 x10 和 x11 中, i 存放在 x19 中.</p>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">strcpy</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, -</span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">  // 调整栈指针,以存放一个item(x19)</span></span>
<span class="line"><span style="color: #A6ACCD">	sd x19, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)    // x19 入栈</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x19, x0, x0  // x19 = </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> + </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #82AAFF">L1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x5, x19, x11 // x5 = x19 + x11 =&gt; address of y[i] </span><span style="color: #89DDFF">in</span><span style="color: #A6ACCD"> x5</span></span>
<span class="line"><span style="color: #A6ACCD">	lbu x6, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(x5)    // </span><span style="color: #82AAFF">temp</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> x6 = y[i]</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x7, x19, x10 // x5 = x19 + x11 =&gt; address of x[i] </span><span style="color: #89DDFF">in</span><span style="color: #A6ACCD"> x7</span></span>
<span class="line"><span style="color: #A6ACCD">	sd  x6, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(x7)    // x[i] = y[i]</span></span>
<span class="line"><span style="color: #A6ACCD">	beq x6, x0, L2   // if x6 ==</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> then go to L2</span></span>
<span class="line"><span style="color: #A6ACCD">	addi x19, x19, </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> // i = i  + </span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #A6ACCD">	jal x0, L1       // go to L1</span></span>
<span class="line"><span style="color: #82AAFF">L2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> ld x19, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)    // 恢复 x19 以及栈指针</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #F78C6C">8</span></span>
<span class="line"><span style="color: #A6ACCD">	jalr x0, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(x1)</span></span>
<span class="line"></span></code></pre>
</div><h3 id="一段循环代码编译为汇编" tabindex="-1">一段循环代码编译为汇编 <a class="header-anchor" href="#一段循环代码编译为汇编" aria-label="Permalink to &quot;一段循环代码编译为汇编&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> A</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">20</span><span style="color: #89DDFF">];</span></span>
<span class="line"><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> sum </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD">  3i </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">++){</span></span>
<span class="line"><span style="color: #F07178">	sum </span><span style="color: #89DDFF">+=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">A</span><span style="color: #89DDFF">[</span><span style="color: #F07178">i</span><span style="color: #89DDFF">];</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>RISC-V 汇编（32 bit)</p>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x9, x8, x0    </span><span style="color: #676E95; font-style: italic"> # x9 = &amp;A[0]</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x10, x0, x0   </span><span style="color: #676E95; font-style: italic"> # sum</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x11, x0, x0   </span><span style="color: #676E95; font-style: italic"> # i</span></span>
<span class="line"><span style="color: #A6ACCD">	addi x13,x0, </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic"> # 20</span></span>
<span class="line"><span style="color: #89DDFF">Loop</span><span style="color: #A6ACCD">:</span></span>
<span class="line"><span style="color: #A6ACCD">	bge x11, x13, Done</span><span style="color: #676E95; font-style: italic"> # if x11 &gt; x13 go to Down(end loop)</span></span>
<span class="line"><span style="color: #A6ACCD">	lw x12, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(x9)     </span><span style="color: #676E95; font-style: italic"> # x12 = A[i]</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> x10, x10, x12 </span><span style="color: #676E95; font-style: italic"> # sum</span></span>
<span class="line"><span style="color: #A6ACCD">	addi x9, x9, </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic"> # x9 = &amp;A[i+1]</span></span>
<span class="line"><span style="color: #A6ACCD">	addi x11, x11, </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"> # i++</span></span>
<span class="line"><span style="color: #A6ACCD">	j </span><span style="color: #89DDFF">loop</span></span>
<span class="line"><span style="color: #82AAFF">Done</span><span style="color: #89DDFF">:</span></span>
<span class="line"></span></code></pre>
</div><h2 id="逻辑操作" tabindex="-1">逻辑操作 <a class="header-anchor" href="#逻辑操作" aria-label="Permalink to &quot;逻辑操作&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><code>and</code> <code>andi</code>
<ul>
<li><code>and x5, x6, x9</code> =&gt; x5 = x6 &amp; x9</li>
<li><code>addi x5, x6, 3</code> =&gt; x5 = x6 &amp; 3</li>
</ul>
</li>
<li><code>sll</code> <code>ssli</code> , 左移(扩大)
<ul>
<li><code>slli x11, x23, 2</code> =&gt; x11 = x23 &lt;&lt; 2</li>
<li>0000 0010 =&gt; 2</li>
<li>0000 1000 =&gt; 8</li>
</ul>
</li>
<li><code>srl</code> <code>srli</code> , 右移（缩小)
<ul>
<li><code>srli x23, x11, 2</code> = &gt; x23 = x11 &gt;&gt; 2</li>
<li>0000 1000 =&gt; 8</li>
<li>0000 0010 =&gt; 2</li>
</ul>
</li>
<li><code>sra</code> <code>srai</code>, 算数右移
<ul>
<li>1111 1111 1111 1111 1111 1111 1110 0111 = -25</li>
<li><code>srai x10, x10, 4</code></li>
<li>1111 1111 1111 1111 1111 1111 1111 1110 = -2</li>
</ul>
</li>
</ul>
<h2 id="helpful-risc-v-assmebler-features" tabindex="-1">Helpful RISC-V Assmebler Features <a class="header-anchor" href="#helpful-risc-v-assmebler-features" aria-label="Permalink to &quot;Helpful RISC-V Assmebler Features&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>a0 - a7 是参数寄存器(x10 - x17,用于函数调用.</li>
<li>zero 代表 x0</li>
<li><code>mv rd, rs = addi rd, rs, 0</code></li>
<li><code>li rd, 13 = addi rd, x0, 13</code></li>
<li><code>nop = addi x0, x0</code></li>
<li><code>la a1 Lable</code> 将 Label 的 地址 加载到 a1</li>
<li>a0 - a7(x10 - x17): 8 个寄存器用于参数传递以及两个返回值(a0 - a1)</li>
<li>ra（x1）: 一个返回 address 的寄存器,用于返回原点（调用的位置）</li>
<li>s0 - s1(x8 - x9) and s2 - s11 (s18 - x27): 保存的寄存器</li>
</ol>
<h2 id="risc-v-函数调用的转换" tabindex="-1">RISC-V 函数调用的转换 <a class="header-anchor" href="#risc-v-函数调用的转换" aria-label="Permalink to &quot;RISC-V 函数调用的转换&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>寄存器比内存快,所以使用它们</li>
<li><code>jal rd, Label</code> 跳转和链接
<ol>
<li><code>jal x1, 100</code></li>
</ol>
</li>
<li><code>jalr rd, rs, imm</code> 跳转和链接寄存器
<ol>
<li><code>jalr x1, 100(x5)</code></li>
</ol>
</li>
<li><code>jal Lable</code> =&gt; <code>jal ra, Lable</code> 调用函数</li>
<li><code>jalr s1</code> 当 s1 是方法指针时,这就是一个函数调用</li>
</ol>
<h3 id="一段函数调用转换为汇编" tabindex="-1">一段函数调用转换为汇编 <a class="header-anchor" href="#一段函数调用转换为汇编" aria-label="Permalink to &quot;一段函数调用转换为汇编&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">...</span></span>
<span class="line"><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">a</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">b</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">y</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">	retrun x </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> y</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> mv a0, s0             </span><span style="color: #676E95; font-style: italic"> # x = a</span></span>
<span class="line"><span style="color: #F78C6C">1004</span><span style="color: #A6ACCD"> mv a1, s1             </span><span style="color: #676E95; font-style: italic"> # y= b</span></span>
<span class="line"><span style="color: #F78C6C">1008</span><span style="color: #A6ACCD"> addi ra, zero, </span><span style="color: #F78C6C">1016</span><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic"> # 1016 is sum function</span></span>
<span class="line"><span style="color: #F78C6C">1012</span><span style="color: #A6ACCD"> j                     </span><span style="color: #676E95; font-style: italic"> # jump to sum</span></span>
<span class="line"><span style="color: #F78C6C">1016</span><span style="color: #A6ACCD"> ...</span></span>
<span class="line"><span style="color: #A6ACCD">...</span></span>
<span class="line"><span style="color: #F78C6C">2000</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> a0, a0, a1</span></span>
<span class="line"><span style="color: #F78C6C">2004</span><span style="color: #A6ACCD"> jr ra</span></span>
<span class="line"></span></code></pre>
</div><p>1008 ~ 1012 可以使用 <code>jal sum</code> 来替代、</p>
<h3 id="调用函数的基本步骤" tabindex="-1">调用函数的基本步骤 <a class="header-anchor" href="#调用函数的基本步骤" aria-label="Permalink to &quot;调用函数的基本步骤&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>把需要的参数放到方法可以访问的地方（寄存器）</li>
<li>转移控制权给函数,使用(<code>jal</code>)
<ol>
<li>保持地址,并跳转到函数的地址</li>
</ol>
</li>
<li>获取函数执行所需的(local)存储资源</li>
<li>执行预期的函数</li>
<li>将返回值放在调用代码可以访问的地方,并恢复我们使用到的寄存器,释放本地存储</li>
<li>将控制器返回给主处理器（<code>ret</code>), 使用存储在寄存器中的地址,返回到调用它的地方</li>
</ol>
<h3 id="方法调用示例" tabindex="-1">方法调用示例 <a class="header-anchor" href="#方法调用示例" aria-label="Permalink to &quot;方法调用示例&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">leaf</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">g</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">h</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">j</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #C792EA">int</span><span style="color: #F07178"> f</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">	f </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #F07178">g </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> h</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #F07178">i </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> j</span><span style="color: #89DDFF">);</span></span>
<span class="line"><span style="color: #F07178">	retrun f</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><ol>
<li>g,h,i,j in a0,a1,a2,a3</li>
<li>f in s0</li>
<li>temp is s1</li>
</ol>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">leaf</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">	# prologue start</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, -</span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"> # 腾出 8byte 来存放的2个整数</span></span>
<span class="line"><span style="color: #A6ACCD">	sw s1, </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)     </span><span style="color: #676E95; font-style: italic"> # 保存 s1, s0 到 sp 中</span></span>
<span class="line"><span style="color: #A6ACCD">	sw s0, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">	# prologue end</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> s0, a0, a1   </span><span style="color: #676E95; font-style: italic"> # f = g + h</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> s1, a2, a3   </span><span style="color: #676E95; font-style: italic"> # temp = i + j</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">sub</span><span style="color: #A6ACCD"> a0, s0, s1   </span><span style="color: #676E95; font-style: italic"> # a0 = （g + h) - (i + j)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">	# epilogue</span></span>
<span class="line"><span style="color: #A6ACCD">	lw s0, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)     </span><span style="color: #676E95; font-style: italic"> # 恢复 s1, s0</span></span>
<span class="line"><span style="color: #A6ACCD">	lw s1, </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">8</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	jr ra</span></span>
<span class="line"></span></code></pre>
</div><h2 id="sp" tabindex="-1">sp <a class="header-anchor" href="#sp" aria-label="Permalink to &quot;sp&quot;">&ZeroWidthSpace;</a></h2>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>sp 是栈指针,从内存空间 的最顶部开始向下增长,在 RISC-V 中使用 x2 这个寄存器.</p>
<ol>
<li>push 是减少 sp 的指针地址</li>
<li>pop 是增加</li>
</ol>
</div>
<p>每个函数都有一组存放在栈上的数据,它们是<strong>栈帧</strong>（stack frame ）,栈帧通常包含：</p>
<ol>
<li>返回地址</li>
<li>参数</li>
<li>使用的局部变量的空间</li>
</ol>
<h2 id="嵌套函数调用" tabindex="-1">嵌套函数调用 <a class="header-anchor" href="#嵌套函数调用" aria-label="Permalink to &quot;嵌套函数调用&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">sumSquare</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">,</span><span style="color: #C792EA">int</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">y</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">mult</span><span style="color: #89DDFF">(</span><span style="color: #F07178">x</span><span style="color: #89DDFF">,</span><span style="color: #F07178">x</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> y</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>在 ra 中有一个 sumSquare 想要跳回的值,但是这个值会被调用 mult 覆盖.</p>
<ol>
<li>caller: 调用函数的人</li>
<li>calle： 被调用的函数</li>
<li>当被调用者从执行中返回时,调用者需要知道哪些寄存器可能发生了变化,哪些寄存器被保证是不变的.</li>
<li>寄存器规定： 即哪些寄存器在程序调用(<code>jal</code>) 后将被取消缓存 ,哪些可以被改变.
<ol>
<li>即有一些寄存器是易失的(temp),一些是要保存的（<strong>调用者需要恢复它们原来的值</strong>）.</li>
<li>这优化了每次进入栈帧的寄存器的数量</li>
</ol>
</li>
<li>分类:
<ol>
<li>跨函数调用保留:
<ol>
<li>sp, gp, tp</li>
<li>s0 - s11 (s0 is also fp)</li>
</ol>
</li>
<li>不保留:
<ol>
<li>参数寄存器以及返回寄存器： a0 - a7, ra</li>
<li>temp 寄存器: t0 - t6</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>上面代码的 RISC-V</p>
<p>x in a1, y in a1</p>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">sumSquare</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> -</span><span style="color: #F78C6C">8</span></span>
<span class="line"><span style="color: #A6ACCD">	sw ra, </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)             // save retrun address to </span><span style="color: #89DDFF">sp</span></span>
<span class="line"><span style="color: #A6ACCD">	sw a1, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)             // save s1 to y</span></span>
<span class="line"><span style="color: #A6ACCD">	mv a1, a0                // y = x =&gt; mult(x,x)</span></span>
<span class="line"><span style="color: #A6ACCD">	jal mult                 // </span><span style="color: #89DDFF">call</span><span style="color: #A6ACCD"> mult</span></span>
<span class="line"><span style="color: #A6ACCD">	lw a1, </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)             // get y from </span><span style="color: #89DDFF">sp</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #89DDFF">add</span><span style="color: #A6ACCD"> a0, a0, a1           // mult() + y</span></span>
<span class="line"><span style="color: #A6ACCD">	lw ra, </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)             // get retrun address from </span><span style="color: #89DDFF">sp</span></span>
<span class="line"><span style="color: #A6ACCD">	addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">, </span><span style="color: #F78C6C">8</span></span>
<span class="line"><span style="color: #A6ACCD">	jr ra</span></span>
<span class="line"></span></code></pre>
</div><h2 id="risc-v-寄存器名称" tabindex="-1">RISC-V 寄存器名称 <a class="header-anchor" href="#risc-v-寄存器名称" aria-label="Permalink to &quot;RISC-V 寄存器名称&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/images/20221213192858.png" alt=""></p>
<h2 id="risc-v-方法调用套路" tabindex="-1">RISC-V 方法调用套路 <a class="header-anchor" href="#risc-v-方法调用套路" aria-label="Permalink to &quot;RISC-V 方法调用套路&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-asm"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">matmul</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic"> # 压栈,腾出空间保存我们要使用的几个 s 寄存器</span></span>
<span class="line"><span style="color: #A6ACCD">    addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> -</span><span style="color: #F78C6C">36</span></span>
<span class="line"><span style="color: #A6ACCD">    sw ra </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s0 </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s1 </span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s2 </span><span style="color: #F78C6C">12</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s3 </span><span style="color: #F78C6C">16</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s4 </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s5 </span><span style="color: #F78C6C">24</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s6 </span><span style="color: #F78C6C">28</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    sw s7 </span><span style="color: #F78C6C">32</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #82AAFF">body</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic"> # xxx xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">end</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #676E95; font-style: italic"> # 恢复寄存器的值</span></span>
<span class="line"><span style="color: #A6ACCD">    lw ra </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s0 </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s1 </span><span style="color: #F78C6C">8</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s2 </span><span style="color: #F78C6C">12</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s3 </span><span style="color: #F78C6C">16</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s4 </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s5 </span><span style="color: #F78C6C">24</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s6 </span><span style="color: #F78C6C">28</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    lw s7 </span><span style="color: #F78C6C">32</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    addi </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">sp</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">36</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">ret</span></span>
<span class="line"></span></code></pre>
</div><h1 id="risc-v-指令二进制的表示" tabindex="-1">RISC-V 指令二进制的表示 <a class="header-anchor" href="#risc-v-指令二进制的表示" aria-label="Permalink to &quot;RISC-V 指令二进制的表示&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="r-格式布局" tabindex="-1">R 格式布局 <a class="header-anchor" href="#r-格式布局" aria-label="Permalink to &quot;R 格式布局&quot;">&ZeroWidthSpace;</a></h2>
<p>用于算术和逻辑运算的指令</p>
<p><img src="/images/20221224214056.png" alt=""></p>
<ol>
<li>opcode,funct3, funct7 : 将告诉我们是否要执行加,减,左移,异或等操作.
<ol>
<li>R-format 的 opcode 固定为 0110011</li>
</ol>
</li>
<li>一个 add 操作： <code>add x18 x19 x10</code> =&gt; <code>x18 = x19 + x10</code></li>
<li><code>0000000 01010 10011 000 10010 0110011</code></li>
<li><code>rs2 = x19</code>, <code>rs1 = x10</code>, <code>rd = x18</code></li>
</ol>
<h2 id="i-格式布局" tabindex="-1">I 格式布局 <a class="header-anchor" href="#i-格式布局" aria-label="Permalink to &quot;I 格式布局&quot;">&ZeroWidthSpace;</a></h2>
<p>处理立即数,比如<code>addi rd rs1, imm</code> =&gt; <code>addi a0 a0 1</code></p>
<p><img src="/images/20221224220039.png" alt=""></p>
<ol>
<li>imm 的范围是 -2084 ～ 2047</li>
</ol>
<p><img src="/images/20221224220349.png" alt="addi x15 x1 -50"></p>
<h2 id="risc-v-loads" tabindex="-1">RISC-V Loads <a class="header-anchor" href="#risc-v-loads" aria-label="Permalink to &quot;RISC-V Loads&quot;">&ZeroWidthSpace;</a></h2>
<p>load 指令也是 I 类型的.</p>
<p><img src="/images/20221224221104.png" alt="lw x14 8(x2)"></p>
<h2 id="s-格式布局" tabindex="-1">S 格式布局 <a class="header-anchor" href="#s-格式布局" aria-label="Permalink to &quot;S 格式布局&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="/images/20221224221434.png" alt=""></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[隐写术]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-12-07-steganography.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-12-07-steganography.html</guid>
            <pubDate>Wed, 07 Dec 2022 13:37:59 GMT</pubDate>
            <content:encoded><![CDATA[<p>在这个项目中是用的图片来作为案例的,首先通过介绍了一种图片的编码形式, ppm:</p>
<ul>
<li>第一行表示是什么格式的 ppm 文件</li>
<li>第二行表示宽和高</li>
<li>第三行表示颜色范围</li>
<li>后面的就是各个像素的RGB值</li>
</ul>
<div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">P3</span></span>
<span class="line"><span style="color: #A6ACCD">2 2</span></span>
<span class="line"><span style="color: #A6ACCD">255</span></span>
<span class="line"><span style="color: #A6ACCD"> 29  83  36      45  64  57</span></span>
<span class="line"><span style="color: #A6ACCD">188 229 201     123 162 184</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div><p>他是这么介绍的:</p>
<blockquote>
<p>我们将探索一种隐藏消息的方法.虽然大多数图像的每个 RGB 通道都有 8 位数据,但人眼无法轻易看出后 4 位的差异.因此,我们可以将信息隐藏在图像的底部位中.我们通过修改每个像素 B 值的最低有效位, 如果最后一位是 0,则把整个像素转换为黑色(255,255,255),如果最后一位是 1,则转换为白色(0,0,0).</p>
</blockquote>
<p>关键就是： <strong>每个 RGB 通道都有 8 位数据,但人眼无法轻易看出后 4 位的差异</strong>,所以这就给了我们操作的空间.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[在 Obsidian 中预览 hugo ]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-12-04-hugo-preview-obsidian.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-12-04-hugo-preview-obsidian.html</guid>
            <pubDate>Sun, 04 Dec 2022 14:45:02 GMT</pubDate>
            <description><![CDATA[<blockquote>
<p>前段时间玩过几天的 obsidian,由于太费神了所以转向了 hugo ,然后直接用文本编辑器写 md ,体验还是不太好,然后我想起还有
obsidian 这个软件,所以就有了这个插件.</p>
</blockquote>
<p>仓库: <a href="https://github.com/fzdwx/hugo-preview-obsidian" target="_blank" rel="noreferrer">https://github.com/fzdwx/hugo-preview-obsidian</a></p>
<p><img src="/images/12.png" alt="运行图例,左编辑区域,右预览区域"></p>
]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>前段时间玩过几天的 obsidian,由于太费神了所以转向了 hugo ,然后直接用文本编辑器写 md ,体验还是不太好,然后我想起还有
obsidian 这个软件,所以就有了这个插件.</p>
</blockquote>
<p>仓库: <a href="https://github.com/fzdwx/hugo-preview-obsidian" target="_blank" rel="noreferrer">https://github.com/fzdwx/hugo-preview-obsidian</a></p>
<p><img src="/images/12.png" alt="运行图例,左编辑区域,右预览区域"></p>
<hr>
<h3 id="_1-当前主要功能" tabindex="-1">1. 当前主要功能 <a class="header-anchor" href="#_1-当前主要功能" aria-label="Permalink to &quot;1. 当前主要功能&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>开一个 <code>custome iframe</code> 预览 hugo (via <a href="https://github.com/Ellpeck/ObsidianCustomFrames" target="_blank" rel="noreferrer">https://github.com/Ellpeck/ObsidianCustomFrames</a>)</li>
<li>后台启动 <code>hugo server</code></li>
</ol>
<h3 id="_2-遇到的问题" tabindex="-1">2. 遇到的问题 <a class="header-anchor" href="#_2-遇到的问题" aria-label="Permalink to &quot;2. 遇到的问题&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li><s>获取 obsidian 打开的目录不知道 api( cwd ),后提 issue 知道了获取方法</s></li>
</ol>
<h3 id="_3-更新" tabindex="-1">3. 更新 <a class="header-anchor" href="#_3-更新" aria-label="Permalink to &quot;3. 更新&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>支持自定义 exec command, 例如可以用来启动终端. 使用 <code>ALT+F12</code> 唤起.
<ol>
<li>由于我使用 git 进行同步,时常需要打开终端并且进入到具体的目录,所以需要一个快速启动终端在当前的目录下的命令： <code>wezterm start --class float --cwd ${cwd}</code>.</li>
<li>目前只提供了 cwd 这个变量,它会替换为当前笔记的路径</li>
</ol>
</li>
<li>添加定义 <code>hugo</code> 的路径,如果不设置则使用系统的 <code>hugo</code> 命令</li>
</ol>
<p><img src="/images/13.png" alt="自定义 command 配置示例"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[关于 git 游离分支]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-23-about-git-detached-head.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-23-about-git-detached-head.html</guid>
            <pubDate>Sat, 22 Oct 2022 16:09:44 GMT</pubDate>
            <content:encoded><![CDATA[<p>刚刚改<a href="https://github.com/fzdwx/nvim" target="_blank" rel="noreferrer">nvim</a>配置时,不知道怎么回事,出现了游离分支(英文名称大概是 <em>detached head</em> ).主要症状就是
git提交不了,由于我用的 lazygit ,它的提示不明显,我以为提交了.然后后面打开 idea 看到底是什么.发现提示是游离分支,这个时候我也没在意.
最致命的操作来了: 我直接 checkout main 分支,然后今天晚上修改的记录全没了.</p>
<p>我的解决方案:</p>
<ol>
<li>查看<code>git log</code>,只能显示当前分支的修改 commit 记录. <strong>无效</strong></li>
<li>利用 idea 的 local history 功能,只能找到文件,文件里面的内容是空白的. <strong>无效</strong></li>
<li>搜索 detached head 的解决方案,只能搜到没切换分支前的解决方案,不适用与我的现象. <strong>无效</strong></li>
<li>最后搜索 git 查看所有 commit ,找到了<code>git reflog</code>,它能显示可引用的历史版本记录,最后找到我要的那个 commit
之后直接<code>git rest --hard xxx</code>完美解决.</li>
</ol>
<p>说实话,有点慌也有点烦,如果找不回来我可能会弃坑 nvim 了.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[写一个自己的github action]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-15-about-github-action.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-15-about-github-action.html</guid>
            <pubDate>Sat, 15 Oct 2022 11:25:10 GMT</pubDate>
            <content:encoded><![CDATA[<p>主要原理就是通过 github action 的来监听 issue 的相关事件,然后读取 issue 中的内容创建文件提交到 git 上,最后直接部署.这样就能随时编辑并展示了.</p>
<p>具体可以看 <a href="https://github.com/fzdwx/add-event-to-myblog" target="_blank" rel="noreferrer">add event to myb log</a> 这个仓库,
以及<a href="https://github.com/fzdwx/fzdwx.github.io/blob/main/.github/workflows/add-event.yml" target="_blank" rel="noreferrer">使用方式</a>.</p>
<p>接下来介绍如何开发一个 github action:</p>
<h3 id="_1-克隆官方提供的-template" tabindex="-1">1. 克隆官方提供的 template <a class="header-anchor" href="#_1-克隆官方提供的-template" aria-label="Permalink to &quot;1. 克隆官方提供的 template&quot;">&ZeroWidthSpace;</a></h3>
<p>官方主要对 typescript 的支持比较好,提供了一系列的<a href="https://github.com/actions/toolkit" target="_blank" rel="noreferrer">工具包</a>,没办法只能同 ts 来进行开发,</p>
<p><a href="https://github.com/actions/typescript-action" target="_blank" rel="noreferrer">https://github.com/actions/typescript-action</a></p>
<h3 id="_2-定义想要在运行时用户输入的参数" tabindex="-1">2. 定义想要在运行时用户输入的参数 <a class="header-anchor" href="#_2-定义想要在运行时用户输入的参数" aria-label="Permalink to &quot;2. 定义想要在运行时用户输入的参数&quot;">&ZeroWidthSpace;</a></h3>
<p>通过编辑<code>action.yml</code>这个文件来定义想要在运行时定义的参数,比如说<code>GITHUB_TOKEN</code>:</p>
<div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add event to my blog</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add event to my blog</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">author</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">fzdwx</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">branding</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">icon</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">archive</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">color</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">white</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">inputs</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 在这个key下面添加自定义参数</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">token</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">required</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">the repo PAT or GITHUB_TOKEN</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">runs</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">using</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">node16</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">main</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">dist/index.js</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"></span></code></pre>
</div><p>参数有三个属性:</p>
<div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F07178">required</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">是否必须</span></span>
<span class="line"><span style="color: #F07178">description</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">描述</span></span>
<span class="line"><span style="color: #F07178">default</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">默认值</span></span>
<span class="line"></span></code></pre>
</div><h3 id="_3-实现想要的功能" tabindex="-1">3. 实现想要的功能 <a class="header-anchor" href="#_3-实现想要的功能" aria-label="Permalink to &quot;3. 实现想要的功能&quot;">&ZeroWidthSpace;</a></h3>
<p>详细可以查看我的<a href="https://github.com/fzdwx/add-event-to-myblog/blob/v2.1/src/main.ts" target="_blank" rel="noreferrer">主要代码</a>.我的里面主要做了:</p>
<ol>
<li>根据当前 issue number<a href="https://github.com/fzdwx/add-event-to-myblog/blob/v2.1/src/main.ts#L16" target="_blank" rel="noreferrer">获取该 issue 的内容</a>.</li>
<li>根据预定义的模板,<a href="https://github.com/fzdwx/add-event-to-myblog/blob/v2.1/src/main.ts#L18-L33" target="_blank" rel="noreferrer">创建文件内容</a>.</li>
<li>提交到<a href="https://github.com/fzdwx/add-event-to-myblog/blob/v2.1/src/main.ts#L34-L38" target="_blank" rel="noreferrer">git</a>上.</li>
</ol>
<h3 id="_4-发布到-marketplace" tabindex="-1">4. 发布到 marketplace <a class="header-anchor" href="#_4-发布到-marketplace" aria-label="Permalink to &quot;4. 发布到 marketplace&quot;">&ZeroWidthSpace;</a></h3>
<p>需要勾选 <strong>Publish this Action to the GitHub Marketplace</strong>,可能需要 2fa 认证,找一个 github 支持(我用的是 authy,防止后面忘记了)就 ok 了.</p>
<p><img src="/images/8.png" alt="Figure 1"></p>
<p>成功 release 后就能在别的项目中使用了.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[在shell脚本中执行cd后改变main shell的路径]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-11-about-source.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-11-about-source.html</guid>
            <pubDate>Tue, 11 Oct 2022 08:55:35 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="起因" tabindex="-1">起因 <a class="header-anchor" href="#起因" aria-label="Permalink to &quot;起因&quot;">&ZeroWidthSpace;</a></h2>
<p>昨天晚上想用fzf与cd联动,就是fzf的结果传递给cd来执行于是有了这么一条命令:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$(</span><span style="color: #FFCB6B">fd</span><span style="color: #C3E88D"> --type d </span><span style="color: #89DDFF">|</span><span style="color: #C3E88D"> </span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span></code></pre>
</div><p>这个命令也确实能完成任务,但是问题有两个:</p>
<ol>
<li>如果直接退出的话会回到家目录,因为<code>$(..)</code>的执行结果为空</li>
<li>每次都要输入这么多会很麻烦</li>
</ol>
<h2 id="用alias" tabindex="-1">用alias <a class="header-anchor" href="#用alias" aria-label="Permalink to &quot;用alias&quot;">&ZeroWidthSpace;</a></h2>
<p>然后尝试用alias来试试,所以就往<code>.zshrc</code>里面添加:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> cdf</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cd </span><span style="color: #89DDFF">$(</span><span style="color: #FFCB6B">fd</span><span style="color: #C3E88D"> --type d </span><span style="color: #89DDFF">|</span><span style="color: #C3E88D"> </span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)&quot;</span></span>
<span class="line"></span></code></pre>
</div><p>结果是直接不能运行,因为它直接识别了<code>$(..)</code>这一段,然后直接运行了,但是后面就不会运行.</p>
<h2 id="用shell脚本" tabindex="-1">用shell脚本 <a class="header-anchor" href="#用shell脚本" aria-label="Permalink to &quot;用shell脚本&quot;">&ZeroWidthSpace;</a></h2>
<p>然后就写了这个文件:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">#!/bin/sh</span></span>
<span class="line"><span style="color: #A6ACCD">path</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">$(</span><span style="color: #FFCB6B">fd</span><span style="color: #C3E88D"> --type d --strip-cwd-prefix --hidden --follow --exclude .git --exclude node_modules </span><span style="color: #89DDFF">|</span><span style="color: #C3E88D"> </span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">-z</span><span style="color: #89DDFF"> &quot;</span><span style="color: #A6ACCD">$path</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">];</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">then</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">exit</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">$path</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">||</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">exit</span></span>
<span class="line"></span></code></pre>
</div><p>结果也是不行,后面我在最下面加了一行<code>echo &quot;$PWD&quot;</code>,我看到是执行了的,但是程序退出了就失效了.</p>
<h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">&ZeroWidthSpace;</a></h2>
<p>最后我搜索到可以使用<code>source xxx</code>或者<code>. xxx</code>来解决,最后是alias+shell脚本来完成这个操作的:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> cdf</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">source /path/to/cdf</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"></span></code></pre>
</div><p>同时它也解决我上面提到的两个问题.</p>
<h2 id="source为什么能解决" tabindex="-1">source为什么能解决？ <a class="header-anchor" href="#source为什么能解决" aria-label="Permalink to &quot;source为什么能解决？&quot;">&ZeroWidthSpace;</a></h2>
<p>之所以直接用shell脚本直接运行会不行,是因为它不是在当前shell环境中运行的,而是一个子shell,所以结果就不能改变当前的文件目录了.</p>
<p>而<code>source</code>或者<code>.</code>就代表着在当前的shell环境中执行,所以就能成功.</p>
<h2 id="更新" tabindex="-1">更新 <a class="header-anchor" href="#更新" aria-label="Permalink to &quot;更新&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_2022-11-18" tabindex="-1">2022/11/18 <a class="header-anchor" href="#_2022-11-18" aria-label="Permalink to &quot;2022/11/18&quot;">&ZeroWidthSpace;</a></h3>
<p>今天发现一种更容易解决的办法,就是在写一个 shell 方法:</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">cd()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;$(</span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)&quot;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>把它加入到<code>.zshrc</code>(我用的是 zsh)中,然后在命令行中输入 <code>cd</code> 就好了.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Code:alias]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-10-code-alias.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-10-code-alias.html</guid>
            <pubDate>Mon, 10 Oct 2022 14:43:27 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="idea" tabindex="-1">idea <a class="header-anchor" href="#idea" aria-label="Permalink to &quot;idea&quot;">&ZeroWidthSpace;</a></h2>
<p>目前有一个想法,是在命令行下管理脚本的工具.</p>
<p>例如说我有一些常用的脚本:</p>
<div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">$(</span><span style="color: #FFCB6B">find</span><span style="color: #C3E88D"> . -name </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> -type d </span><span style="color: #89DDFF">|</span><span style="color: #C3E88D"> </span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span></code></pre>
</div><p>然后通过命令行添加</p>
<div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">cli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">load</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cd </span><span style="color: #89DDFF">$(</span><span style="color: #FFCB6B">find</span><span style="color: #C3E88D"> . -name </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D"> -type d </span><span style="color: #89DDFF">|</span><span style="color: #C3E88D"> </span><span style="color: #FFCB6B">fzf</span><span style="color: #89DDFF">)&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-alias</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">cdf</span></span>
<span class="line"></span></code></pre>
</div><p>然后使用cdf进行运行</p>
<div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">cli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">cdf</span></span>
<span class="line"></span></code></pre>
</div><h2 id="后续" tabindex="-1">后续 <a class="header-anchor" href="#后续" aria-label="Permalink to &quot;后续&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>2022-10-18 22:47</p>
</blockquote>
<p>刚刚找到了一个跟我这个想法很契合的项目: <a href="https://github.com/denisidoro/navi" target="_blank" rel="noreferrer">https://github.com/denisidoro/navi</a>.</p>
<p>今天一晚上都在调研技术的可行性,但是都达不到我想要的效果.还是这个例子,<code>cd $(find . -name &quot;*&quot; -type d | fzf)</code>,
主要有两种思路:</p>
<ol>
<li>在运行程序的使用利用shell的tab键盘补全,直接替换成这段命令,然后运行.比如说程序叫<code>qwe</code>,在shell里面输入<code>qwe cdf&lt;TAB&gt;</code>
,然后就直接替换为上面的命令.我在go里面找到<code>cobra</code>这个包,它能动态补全命令,有点效果,但还不够,不能做到全部替换,遂搁置.</li>
<li>直接在程序里面运行这段命令,我试了之后还是不行,<code>cd</code>执行后没有生效,应该还是跟<code>fork</code>有关.</li>
</ol>
<p>然后就到github里面找别人的实现,没想到找到了一个,但是试过之后还是不支持,但确实做的还不错.</p>
<p>想要做成我想要的效果就是实现:</p>
<ol>
<li>在shell中补全能直接替换所有,而不是一段.</li>
<li>在程序中不用<code>fork</code>运行.</li>
</ol>
<p>还需要在看看.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[在Abstract Machine上玩超级马里奥]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-09-mario-nes.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-09-mario-nes.html</guid>
            <pubDate>Sun, 09 Oct 2022 11:40:42 GMT</pubDate>
            <content:encoded><![CDATA[<p>最近在学习 jyy 的<a href="http://jyywiki.cn/ICS/2021/" target="_blank" rel="noreferrer">计算机系统基础习题课 </a>,
在做<a href="https://nju-projectn.github.io/ics-pa-gitbook/ics2021/1.1.html#nemu%E6%98%AF%E4%BB%80%E4%B9%88" target="_blank" rel="noreferrer">pa1</a>的时候提
到一个运行红白机游戏的<a href="https://github.com/NJU-ProjectN/fceux-am" target="_blank" rel="noreferrer">项目</a></p>
<p>遇到的坑:</p>
<p>1.<code>SIGSTKSZ</code> 参数找不到</p>
<p><img src="/images/5.png" alt="SIGSTKSZ参数找不到"></p>
<p>将<code>SIGSTKSZ</code>修改为一个固定的参数</p>
<div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">//uint8_t sigstack[SIGSTKSZ];</span></span>
<span class="line"><span style="color: #C792EA">uint8_t</span><span style="color: #A6ACCD"> sigstack</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">8192</span><span style="color: #89DDFF">];</span></span>
<span class="line"></span></code></pre>
</div><p>2.serial 不正确</p>
<p><img src="/images/6.png" alt="serial不正确"></p>
<p>修改<code>nemu/src/device/serial.c#init_serial</code>,每个人的不同,我的是 9.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GFS]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-07-gfs.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-07-gfs.html</guid>
            <pubDate>Fri, 07 Oct 2022 13:12:56 GMT</pubDate>
            <content:encoded><![CDATA[<ol>
<li>为了性能(<strong>Performance</strong>), 所以将数据分割放到大量的服务器上,从而实现并行的读取数据,这就是分片(<strong>Sharding</strong>).</li>
<li>而成败上千的机器总会发生错误,所以有了容错(<strong>Fault Tolerance</strong>).</li>
<li>实现容错最简单的方式就是复制(<strong>Replication</strong>),其中一个发生故障了就切换另一个.</li>
<li>使用了复制,如果你不够小心,那么它们之间就可能会不一致.数据就有可能出现问题,所以就有了不一致的问题(<strong>Inconsistency</strong>).</li>
<li>如果为了实现一致性(<strong>Consistency</strong>),那么就需要多进行额外的交互来保证一致性,所以代价就是低性能(<strong>Low Perf</strong>)
,但这与我们开始的希望不符合.</li>
</ol>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>So,强一致性代表着低性能.</p>
</div>
<h2 id="设计目标" tabindex="-1">设计目标 <a class="header-anchor" href="#设计目标" aria-label="Permalink to &quot;设计目标&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>由于GFS是建立在大量的计算机上的,而这些计算机会不可避免的发生故障.所以必须要进行：<strong>检查,容错以及快速从故障恢复</strong>.</li>
<li><strong>主要支持大文件</strong>(例如说好几个G的文件),同时也支持小文件但不做针对性的优化.</li>
<li>工作负载主要由两种类型的读取组成：<strong>大的流式读取</strong>和<strong>小的随机读取</strong>
.对于性能有过特别考虑的应用通常会作批处理并且对他们读取的内容进行排序,这样可以使得他们的读取始终是单向顺序读取,而不需要往回读取数据.
<ul>
<li>在大的流式读取中,单个操作通常要读取数百k,甚至1m或者更大的数据.对于同一个客户端来说,往往会发起连续的读取操作顺序读取一个文件.</li>
<li>小的随机读取通常在某个任意的偏移位置读取几kb的数据.小规模的随机读取通常在文件的不同位置,读取几k数据.</li>
</ul>
</li>
<li>GFS中的文件通常上一旦完成写入就很少会再次修改,所以主要针对<strong>大的流式读取</strong>,同时夜支持任意位置的小规模写入操作.</li>
<li>GFS对多个客户端并行添加同一个文件必须要有非常有效且明确语义的支持,即<strong>原子操作</strong>.通常会有多个客户端会并行的对同一个文件进行append.</li>
<li>高性能的稳定带宽的网络要比低延时更加重要.我们大多数的目标应用程序都非常<strong>重视高速批量处理数据</strong>
,而很少有人对单个读写操作有严格的响应时间要求.</li>
</ol>
<h2 id="架构" tabindex="-1">架构 <a class="header-anchor" href="#架构" aria-label="Permalink to &quot;架构&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>单个master,多个chunk server(保存具体的文件),多个client.</li>
<li>每个文件被拆分为一定大小(64mb)的块(chunk),且每个chunk有一个唯一的64位的标志(chunk handle).</li>
<li>每个chunk都会在不同的chunk server上保存备份(默认是3个),用户可以指定不同的复制级别.</li>
<li>master管理元数据(metadata),例如文件到chunk的映射关系,chunk的位置信息等.</li>
<li>master管理chunk的分片,孤点chunk的垃圾回收机制,chunk server之间的镜像管理等</li>
<li>每个chunk server与master之间有心跳机制,并在检测的过程中年发出指令并收集状态.</li>
</ol>
<h2 id="gfs-master中的metadata" tabindex="-1">GFS Master中的metadata <a class="header-anchor" href="#gfs-master中的metadata" aria-label="Permalink to &quot;GFS Master中的metadata&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>filename -&gt; chunk ids(chunk handles) <em><strong>NV</strong></em></li>
<li>chunk handle与chunk数据的对应关系
<ul>
<li>chunk保存在哪个服务器上(chunk server list)</li>
<li>chunk的version no <em><strong>NV</strong></em></li>
<li>chunk的primary chunk server,因为写操作在在其上进行</li>
<li>primary chunk server的lease expiration</li>
</ul>
</li>
</ol>
<p>这两个data table都在master的内存中存放,为了容错(例如说重启后数据不丢失数据),它会在磁盘上存储log,读取的使用从内存里面读取,写的时候会写入内存以及磁盘.
每当有数据变更时,就会在磁盘上的日志进行追加,并且定期(日志增长超过某一个大小)创建checkpoint(类似快照,不用从头开始读取)</p>
<h2 id="gfs-read-steps" tabindex="-1">GFS Read Steps <a class="header-anchor" href="#gfs-read-steps" aria-label="Permalink to &quot;GFS Read Steps&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>首先读请求就表明client有filename以及想要读取的位置(offset),然后发送给master.</li>
<li>master收到请求后就从filenames中获取对应的chunk handles.而每个chunk的大小上固定的,所以就得到的具体开始的chunk handle.</li>
<li>然后根据chunk handle找到对应存放数据的chunk server的列表返回给client.</li>
<li>client可以选择一个server来进行读取(论文中说会选择一个最近的服务器,应为google里面ip是连续的,可以根据ip判断远近)
,应为客户端每次只读取1mb或者64kb的数据,所以它会缓存chunk与chunk server的关系,这样就不用每次都请求.</li>
<li>chunk server收到请求后,根据chunk handle(推测chunk是安装chunk handle进行命名的)找到对应的chunk以及offset对应的数据给客户端.</li>
</ol>
<h3 id="q1-如果读取的数据跨越了一个chunk怎么办" tabindex="-1">q1: 如果读取的数据跨越了一个chunk怎么办？ <a class="header-anchor" href="#q1-如果读取的数据跨越了一个chunk怎么办" aria-label="Permalink to &quot;q1: 如果读取的数据跨越了一个chunk怎么办？&quot;">&ZeroWidthSpace;</a></h3>
<p>例如说client想要读取的数据超过了64mb,或者仅仅上是2个byte却跨越了chunk,client会在发送请求时注意到这次请求跨越了边界,
所以会将一个请求拆分为2个请求发送到master,所以这里可能上向master发送两次读请求,之后在向不同的chunk server读取数据.</p>
<h2 id="多个副本之间变更顺序的一致性" tabindex="-1">多个副本之间变更顺序的一致性 <a class="header-anchor" href="#多个副本之间变更顺序的一致性" aria-label="Permalink to &quot;多个副本之间变更顺序的一致性&quot;">&ZeroWidthSpace;</a></h2>
<p>针对一个chunk</p>
<ol>
<li>master授权给某个持有这个chunk的server一个租约期限(60s),称为primary.</li>
<li>primary对所有的更改操作进行排序(serial order),然后其他的secondary根据这个顺序进行变更.</li>
<li>只要这个chunk正在变更,那么primary就可以向master申请延长租约.</li>
</ol>
<h2 id="gfs-write-steps" tabindex="-1">GFS Write Steps <a class="header-anchor" href="#gfs-write-steps" aria-label="Permalink to &quot;GFS Write Steps&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>client向master发送请求获取chunk server list(primary,secondaries),
如果没有primary,master就会选择一个secondary成为primary.</li>
<li>client获取到chunk server list后会缓存下来,只有当primary
没有响应或租约过期后才会再次请求.</li>
<li>client将数据推送到所有replicas,客户端不保证推送的顺序,每个chunk server会将数据保存在内部的lur cache中,直到数据被使用或过期.</li>
<li>当所有replicas都收到了数据,client将会发送一个写请求到primary,它标识了之前推送到每个副本的数据.
primary将这些写入组织成一定的顺序应用到自己本地.</li>
<li>primary然后将这个应用顺序转发给各个secondary.</li>
<li>secondaries应用这个顺序完成修改并答复primary.</li>
<li>primary答复client,如果出现了任意错误也会答复给client.在出现错误的情况下,write request也可能在primary以及secondary中成功
(如果primary直接就失败了,那么它将不会转发serial order给secondaries),client将认为这次请求是失败的,它会通过重试来处理(
3-7尝试几次重新写入)</li>
</ol>
<h2 id="gfs-atomic-record-appends" tabindex="-1">GFS Atomic Record Appends <a class="header-anchor" href="#gfs-atomic-record-appends" aria-label="Permalink to &quot;GFS Atomic Record Appends&quot;">&ZeroWidthSpace;</a></h2>
<div class="tip custom-block"><p class="custom-block-title">对同一片区域个并发写入是不可序列化的</p>
<p>这片区域可能最终包含多个客户端的数据片段.</p>
</div>
<p>一个原子的append操作.<code>recored append</code>至少会在给定的offset(GFS自己选择的,因为这里可能会失败,可能有一些chunk server上有这个数据)
上追加到文件上一次,并将该offset返回给client.它类似<code>O_APPEND</code>保证原子性.
<code>recored append</code>遵守<a href="#gfs-write-steps"> GFS Write Steps </a>流程,但是有一些特别的地方:</p>
<ol>
<li>client推送所有数据后,primary会检查append到该chunk后是否超过了单个chunk的大小.</li>
<li>如果超过了,则在当前chunk填充到最大offset时(secondary也要保存),回复client,指出该操作应该在下一个chunk上重试(
record的大小需要控制在单个chunk最大值的四分之一,以保证碎片在可接收的水平).</li>
<li>如果没有超过最大大小,则按照正常的情况进行保存.</li>
</ol>
<h2 id="过期副本检测" tabindex="-1">过期副本检测 <a class="header-anchor" href="#过期副本检测" aria-label="Permalink to &quot;过期副本检测&quot;">&ZeroWidthSpace;</a></h2>
<p>如果chunk server发生故障而宕机或者丢失了某些更新请求,那么它就有可能过期了.对于每个chunk,master都维护了一个version
no来标识最新和过期的副本.</p>
<p>当master为一个chunk的primary server授权或续期时就会增加version no并通知所有replicas进行更新.</p>
<p>在数据一致的情况下,master和所有replicas的version no是一致的(在client发送写请求之前可以保证).</p>
<p>当chunk server重启或上报version no时,master会检查它时否包含过期的副本,如果发现master发现version
no大于它的记录,master会采用更高的version no进行更新.</p>
<p>master通过周期性的垃圾回收来删除过期的副本,在删除前,它会确认在它所有client的chunk信息请求的应答中没有包含这个过期的副本.</p>
<p>client在从master获取chunk server列表时会附带获取version no,所以它可以进行比对,选择最新的副本进行操作.</p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>这并不是一个合格的多副本,多活,高可用,故障自修复的分布式系统.</p>
<h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/gfs-sosp2003.pdf" target="_blank" rel="noreferrer">gfs paper 原文</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/424677701" target="_blank" rel="noreferrer">gfs paper 中文翻译</a></li>
<li><a href="https://www.bilibili.com/video/BV1R7411t71W/?p=3&amp;spm_id_from=333.788.top_right_bar_window_history.content.click&amp;vd_source=98f230be6561d2fc7450e7ce05876f68" target="_blank" rel="noreferrer">gfs 视频</a></li>
<li><a href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-824/lecture-03-gfs/3.1" target="_blank" rel="noreferrer">gfs 视频翻译</a></li>
<li><a href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-824/lecture-03-gfs/3.2-qiang-yi-zhi-xing-strong-consistency" target="_blank" rel="noreferrer">Bad Replication Design</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[调节linux屏幕的亮度]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-10-04-backlight.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-10-04-backlight.html</guid>
            <pubDate>Tue, 04 Oct 2022 02:07:28 GMT</pubDate>
            <content:encoded><![CDATA[<p><strong>查看当前backlight由什么控制:</strong></p>
<blockquote>
<p>一般都是<code>intel</code>.</p>
</blockquote>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">ls</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/sys/class/backlight</span></span>
<span class="line"></span></code></pre>
</div><p><strong>查看当前的亮度:</strong></p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">cat</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/sys/class/backlight/intel_backlight/max_brightness</span></span>
<span class="line"></span></code></pre>
</div><p><strong>修改亮度:</strong></p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">echo</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">sudo</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">tee</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/sys/class/backlight/intel_backlight/brightness</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Dwm初体验]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-09-29-dwm.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-09-29-dwm.html</guid>
            <pubDate>Thu, 29 Sep 2022 15:42:41 GMT</pubDate>
            <description><![CDATA[<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">git</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clone</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">https://git.suckless.org/dwm</span></span>
<span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">dwm</span></span>
<span class="line"><span style="color: #FFCB6B">sudo</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">make</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clean</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">install</span></span>
<span class="line"></span></code></pre>
</div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">&ZeroWidthSpace;</a></h2>
<p>如果已经有了 sddm,可以使用<code>sudo systemctl disable sddm.service</code>
来进行关闭,如果到时候不想用了可以用<code>sudo systemctl enable sddm.service</code>来开启 sddm.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic"># 准备配置文件</span></span>
<span class="line"><span style="color: #FFCB6B">cp</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/etc/X11/xinit/xinitrc</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc</span></span>
<span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 添加</span></span>
<span class="line"><span style="color: #82AAFF">exec</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">dwm</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 注释</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#twm &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xclock -geometry 50x50-1+1 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xterm -geometry 80x50+494+51 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xterm -geometry 80x20+494-0 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#exec xterm -geometry 80x66+0+0 -name login</span></span>
<span class="line"></span></code></pre>
</div><p>然后重启并调用<code>startx</code>即可.</p>
<h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="直接断网" tabindex="-1">直接断网 <a class="header-anchor" href="#直接断网" aria-label="Permalink to &quot;直接断网&quot;">&ZeroWidthSpace;</a></h3>
<p>使用 NetworkManager 进行连接,可能要用到<code>dhcpcd</code>.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">nmcli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">device</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">wifi</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">list</span></span>
<span class="line"><span style="color: #FFCB6B">nmcli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">device</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">wifi</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">connect</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">wifi name</span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">password</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">pwd</span><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>可能会连接失败,你可以试试<code>nmcli connection show</code>
来查看是否存在以前的连接信息,可以用<code>nmcli connection delete ${wifi name}</code>来删除对应的信息</p>
<h3 id="输入法失效" tabindex="-1">输入法失效 <a class="header-anchor" href="#输入法失效" aria-label="Permalink to &quot;输入法失效&quot;">&ZeroWidthSpace;</a></h3>
<p>添加配置文件</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.pam_environment</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">INPUT_METHOD</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">GTK_IM_MODULE</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">QT_IM_MODULE</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">XMODIFIERS</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=@im=fcitx5</span></span>
<span class="line"></span></code></pre>
</div><p>添加启动命令</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc1</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 在exec dwm之前添加</span></span>
<span class="line"><span style="color: #82AAFF">exec</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">fcitx5</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&amp;</span></span>
<span class="line"></span></code></pre>
</div><h3 id="扩展屏幕无效" tabindex="-1">扩展屏幕无效 <a class="header-anchor" href="#扩展屏幕无效" aria-label="Permalink to &quot;扩展屏幕无效&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic"># 可以先查看有哪些屏幕</span></span>
<span class="line"><span style="color: #FFCB6B">xrandr</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 将下面的命令加入 ~/.xinitrc1 中,在exec dwm之前添加</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 我有两个,是上下关系,所以用below 其他有 left 以及 right</span></span>
<span class="line"><span style="color: #FFCB6B">xrandr</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--output</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">eDP-</span><span style="color: #F78C6C">1</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">  </span><span style="color: #C3E88D">--auto</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--below</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">HDMI-</span><span style="color: #F78C6C">0</span></span>
<span class="line"></span></code></pre>
</div><h2 id="常用快捷键" tabindex="-1">常用快捷键 <a class="header-anchor" href="#常用快捷键" aria-label="Permalink to &quot;常用快捷键&quot;">&ZeroWidthSpace;</a></h2>
<p>可以参考我配置： <a href="https://github.com/fzdwx/dwm" target="_blank" rel="noreferrer">https://github.com/fzdwx/dwm</a></p>
<p><code>MOD</code> -&gt; <code>WIN</code></p>
<p>| 快捷键            | desc     |
|</p>
]]></description>
            <content:encoded><![CDATA[<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">git</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clone</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">https://git.suckless.org/dwm</span></span>
<span class="line"><span style="color: #82AAFF">cd</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">dwm</span></span>
<span class="line"><span style="color: #FFCB6B">sudo</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">make</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">clean</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">install</span></span>
<span class="line"></span></code></pre>
</div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">&ZeroWidthSpace;</a></h2>
<p>如果已经有了 sddm,可以使用<code>sudo systemctl disable sddm.service</code>
来进行关闭,如果到时候不想用了可以用<code>sudo systemctl enable sddm.service</code>来开启 sddm.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic"># 准备配置文件</span></span>
<span class="line"><span style="color: #FFCB6B">cp</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/etc/X11/xinit/xinitrc</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc</span></span>
<span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 添加</span></span>
<span class="line"><span style="color: #82AAFF">exec</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">dwm</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 注释</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#twm &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xclock -geometry 50x50-1+1 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xterm -geometry 80x50+494+51 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#xterm -geometry 80x20+494-0 &amp;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#exec xterm -geometry 80x66+0+0 -name login</span></span>
<span class="line"></span></code></pre>
</div><p>然后重启并调用<code>startx</code>即可.</p>
<h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="直接断网" tabindex="-1">直接断网 <a class="header-anchor" href="#直接断网" aria-label="Permalink to &quot;直接断网&quot;">&ZeroWidthSpace;</a></h3>
<p>使用 NetworkManager 进行连接,可能要用到<code>dhcpcd</code>.</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">nmcli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">device</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">wifi</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">list</span></span>
<span class="line"><span style="color: #FFCB6B">nmcli</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">device</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">wifi</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">connect</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">wifi name</span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">password</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">pwd</span><span style="color: #89DDFF">}</span></span>
<span class="line"></span></code></pre>
</div><p>可能会连接失败,你可以试试<code>nmcli connection show</code>
来查看是否存在以前的连接信息,可以用<code>nmcli connection delete ${wifi name}</code>来删除对应的信息</p>
<h3 id="输入法失效" tabindex="-1">输入法失效 <a class="header-anchor" href="#输入法失效" aria-label="Permalink to &quot;输入法失效&quot;">&ZeroWidthSpace;</a></h3>
<p>添加配置文件</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.pam_environment</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">INPUT_METHOD</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">GTK_IM_MODULE</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">QT_IM_MODULE</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=fcitx5</span></span>
<span class="line"><span style="color: #FFCB6B">XMODIFIERS</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">DEFAULT=@im=fcitx5</span></span>
<span class="line"></span></code></pre>
</div><p>添加启动命令</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">vim</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.xinitrc1</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 在exec dwm之前添加</span></span>
<span class="line"><span style="color: #82AAFF">exec</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">fcitx5</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&amp;</span></span>
<span class="line"></span></code></pre>
</div><h3 id="扩展屏幕无效" tabindex="-1">扩展屏幕无效 <a class="header-anchor" href="#扩展屏幕无效" aria-label="Permalink to &quot;扩展屏幕无效&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic"># 可以先查看有哪些屏幕</span></span>
<span class="line"><span style="color: #FFCB6B">xrandr</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">#</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 将下面的命令加入 ~/.xinitrc1 中,在exec dwm之前添加</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 我有两个,是上下关系,所以用below 其他有 left 以及 right</span></span>
<span class="line"><span style="color: #FFCB6B">xrandr</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--output</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">eDP-</span><span style="color: #F78C6C">1</span><span style="color: #C3E88D">-</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">  </span><span style="color: #C3E88D">--auto</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--below</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">HDMI-</span><span style="color: #F78C6C">0</span></span>
<span class="line"></span></code></pre>
</div><h2 id="常用快捷键" tabindex="-1">常用快捷键 <a class="header-anchor" href="#常用快捷键" aria-label="Permalink to &quot;常用快捷键&quot;">&ZeroWidthSpace;</a></h2>
<p>可以参考我配置： <a href="https://github.com/fzdwx/dwm" target="_blank" rel="noreferrer">https://github.com/fzdwx/dwm</a></p>
<p><code>MOD</code> -&gt; <code>WIN</code></p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD+SHIFT+ENTER</code></td>
<td>新开终端</td>
</tr>
</tbody>
</table>
<h3 id="在本-tag-内切换聚焦窗口" tabindex="-1">在本 tag 内切换聚焦窗口 <a class="header-anchor" href="#在本-tag-内切换聚焦窗口" aria-label="Permalink to &quot;在本 tag 内切换聚焦窗口&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ALT + tab</code></td>
<td>切换聚焦窗口</td>
</tr>
<tr>
<td><code>MOD + up</code></td>
<td>切换聚焦窗口</td>
</tr>
<tr>
<td><code>MOD + down</code></td>
<td>切换聚焦窗口</td>
</tr>
</tbody>
</table>
<h3 id="跨-tag-操作" tabindex="-1">跨 tag 操作 <a class="header-anchor" href="#跨-tag-操作" aria-label="Permalink to &quot;跨 tag 操作&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + left / right</code></td>
<td>切换 tag</td>
</tr>
<tr>
<td><code>MOD + SHIGT + left / tight</code></td>
<td>将当前窗口移动到其他 tag</td>
</tr>
<tr>
<td><code>MOD + a</code></td>
<td>第一次是显示所有 tag,第二次是跳转到聚焦的窗口所在的窗口</td>
</tr>
</tbody>
</table>
<h3 id="窗口操作" tabindex="-1">窗口操作 <a class="header-anchor" href="#窗口操作" aria-label="Permalink to &quot;窗口操作&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + q</code></td>
<td>退出窗口</td>
</tr>
<tr>
<td><code>MOD + h</code></td>
<td>隐藏窗口</td>
</tr>
<tr>
<td><code>MOD + SHIFT + h</code></td>
<td>显示窗口（像一个栈一样.）</td>
</tr>
<tr>
<td><code>MOD + ENTER</code></td>
<td>将当前窗口设置为主窗口</td>
</tr>
<tr>
<td><code>MOD + f</code></td>
<td>将当前窗口全屏</td>
</tr>
<tr>
<td><code>MOD + CTRL + 方向键</code></td>
<td>移动窗口</td>
</tr>
<tr>
<td><code>MOD + ALT + 方向键</code></td>
<td>调整窗口大小</td>
</tr>
<tr>
<td><code>MOD + o</code></td>
<td>只显示当前窗口/显示所有窗口</td>
</tr>
<tr>
<td><code>MOD + t</code></td>
<td>开启/关闭 聚焦目标的浮动模式</td>
</tr>
<tr>
<td><code>MOD + SHIFT + t</code></td>
<td>开启/关闭 全部目标的浮动模式</td>
</tr>
</tbody>
</table>
<p>| <code>MOD + SHIFT + f</code> | 开启/关闭 状态栏 |</p>
<h3 id="切换屏幕" tabindex="-1">切换屏幕 <a class="header-anchor" href="#切换屏幕" aria-label="Permalink to &quot;切换屏幕&quot;">&ZeroWidthSpace;</a></h3>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>desc</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>MOD + x</code></td>
<td>将鼠标移动到其他屏幕</td>
</tr>
<tr>
<td><code>MOD + SHIFT + X</code></td>
<td>将当前窗口移动到其他屏幕</td>
</tr>
</tbody>
</table>
<h2 id="更新" tabindex="-1">更新 <a class="header-anchor" href="#更新" aria-label="Permalink to &quot;更新&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="click-status-bar" tabindex="-1">click status bar <a class="header-anchor" href="#click-status-bar" aria-label="Permalink to &quot;click status bar&quot;">&ZeroWidthSpace;</a></h3>
<p>最近跟进了大佬的配置<a href="https://github.com/yaocccc/dwm" target="_blank" rel="noreferrer">yaocccc</a>, 可点击的 status bar.</p>
<p>主要原理就是根据预定义的格式解析出<code>signal</code>
,然后调用预定义的脚本文件(<a href="https://github.com/fzdwx/dwm/commit/b30b5bedb1661e70acf6830f924857650831b441#diff-62eebf5eaf0e6a76a21dfed9da6556ee5413ddb49f06013bd83403cc1a485d98" target="_blank" rel="noreferrer">commit</a>)</p>
<p>也很容易扩展,可以参考我的<a href="https://github.com/fzdwx/dwm/blob/main/statusbar/packages/fm.sh" target="_blank" rel="noreferrer">fm</a>, <code>update</code>是构造要返回的内容,
<code>click</code>就是点击时调用的方法,<code>wezterm start --class float ranger</code>我这一段就是启动 wezterm 并调用 ranger.</p>
<p><img src="/images/11.png" alt="img.png"></p>
<h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://wiki.archlinux.org/title/Dwm_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki Dwm</a></li>
<li><a href="https://dwm.suckless.org/patches/" target="_blank" rel="noreferrer">Dwm patches</a></li>
<li><a href="https://github.com/Katzeee/dwm-patches-chinese/blob/master/dwm-patches-chinese.md" target="_blank" rel="noreferrer">Dwm patches 中文翻译</a></li>
<li><a href="https://yaocc.cc/2022/06/19/linux%E4%B8%9D%E6%BB%91%E7%9A%84%E5%8A%A8%E7%94%BB%E4%BD%93%E9%AA%8C%E2%80%94%E2%80%94picom/" target="_blank" rel="noreferrer">picom 美化</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Neovim使用记录]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-09-28-neovim-use-notes.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-09-28-neovim-use-notes.html</guid>
            <pubDate>Wed, 28 Sep 2022 07:59:37 GMT</pubDate>
            <description><![CDATA[<blockquote>
<p>由于最近切换到了linux,不可避免的经常需要使用vi等编辑器,所以这次好好折腾一下.</p>
</blockquote>
<p>我的配置地址: <a href="https://github.com/fzdwx/nvim" target="_blank" rel="noreferrer">https://github.com/fzdwx/nvim</a> ,现在直接使用 <a href="https://github.com/LazyVim/LazyVim" target="_blank" rel="noreferrer">LazyVim</a>.</p>
]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>由于最近切换到了linux,不可避免的经常需要使用vi等编辑器,所以这次好好折腾一下.</p>
</blockquote>
<p>我的配置地址: <a href="https://github.com/fzdwx/nvim" target="_blank" rel="noreferrer">https://github.com/fzdwx/nvim</a> ,现在直接使用 <a href="https://github.com/LazyVim/LazyVim" target="_blank" rel="noreferrer">LazyVim</a>.</p>
<hr>
<blockquote>
<p>过期</p>
</blockquote>
<h2 id="我的配置" tabindex="-1">我的配置 <a class="header-anchor" href="#我的配置" aria-label="Permalink to &quot;我的配置&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="pakcer" tabindex="-1">pakcer <a class="header-anchor" href="#pakcer" aria-label="Permalink to &quot;pakcer&quot;">&ZeroWidthSpace;</a></h3>
<p>我选用的插件管理器是<code>packer</code>,我也不知道选什么好,就按最新的来吧.</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">--- setup packer</span></span>
<span class="line"><span style="color: #89DDFF">local</span><span style="color: #A6ACCD"> fn </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> vim.</span><span style="color: #FFCB6B">fn</span></span>
<span class="line"><span style="color: #89DDFF">local</span><span style="color: #A6ACCD"> install_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> fn.</span><span style="color: #82AAFF">stdpath</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">data</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">..</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">/site/pack/packer/start/packer.nvim</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> fn.</span><span style="color: #82AAFF">empty</span><span style="color: #A6ACCD">(fn.</span><span style="color: #82AAFF">glob</span><span style="color: #A6ACCD">(install_path)) </span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">then</span></span>
<span class="line"><span style="color: #A6ACCD">    packer_bootstrap </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> fn.</span><span style="color: #82AAFF">system</span><span style="color: #A6ACCD">({ </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">git</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">clone</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">--depth</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://github.com/wbthomason/packer.nvim</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, install_path })</span></span>
<span class="line"><span style="color: #A6ACCD">    vim.</span><span style="color: #82AAFF">cmd</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">packadd packer.nvim</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">end</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">--- add plugins</span></span>
<span class="line"><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">packer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">).</span><span style="color: #82AAFF">startup</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">use</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- 自托管</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">use</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">wbthomason/packer.nvim</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- 其他插件</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- 如果是第一次则同步</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> packer_bootstrap </span><span style="color: #89DDFF; font-style: italic">then</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">packer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">).</span><span style="color: #82AAFF">sync</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">end</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">end</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>
</div><h3 id="alpha" tabindex="-1"><a href="https://github.com/goolord/alpha-nvim" target="_blank" rel="noreferrer">alpha</a> <a class="header-anchor" href="#alpha" aria-label="Permalink to &quot;[alpha](https://github.com/goolord/alpha-nvim)&quot;">&ZeroWidthSpace;</a></h3>
<p>是一个dashboard,也可以说是一个欢迎界面.</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">packer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">).</span><span style="color: #82AAFF">startup</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">use</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- ...</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">--- 添加下面两行进行安装</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">use</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">goolord/alpha-nvim</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">use</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">kyazdani42/nvim-web-devicons</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- ...</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">end</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>
</div><p>配置代码太长了就不放了,可以点击这里<a href="https://github.com/fzdwx/nvim/blob/main/lua/config/plugins/alpha.lua" target="_blank" rel="noreferrer"> 这里 </a>参考.</p>
<h3 id="telescope" tabindex="-1"><a href="https://github.com/nvim-telescope/telescope.nvim" target="_blank" rel="noreferrer">telescope</a> <a class="header-anchor" href="#telescope" aria-label="Permalink to &quot;[telescope](https://github.com/nvim-telescope/telescope.nvim)&quot;">&ZeroWidthSpace;</a></h3>
<p>主要作用是文件的查找与预览.</p>
<div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">packer</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">).</span><span style="color: #82AAFF">startup</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF; font-style: italic">function</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">use</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- ...</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">--- 添加下面代码进行安装</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">use</span><span style="color: #A6ACCD"> {</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">nvim-telescope/telescope.nvim</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">, tag </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0.1.0</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">ahmedkhalf/project.nvim</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">nvim-lua/plenary.nvim</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">    }</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">-- ...</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">end</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span></code></pre>
</div><ul>
<li><a href="https://github.com/fzdwx/nvim/blob/main/lua/config/plugins/telescope.lua" target="_blank" rel="noreferrer">配置</a></li>
<li><a href="https://github.com/fzdwx/nvim/blob/main/lua/config/key/init.lua#L34-L52" target="_blank" rel="noreferrer">key map</a></li>
</ul>
<h2 id="一些教程" tabindex="-1">一些教程 <a class="header-anchor" href="#一些教程" aria-label="Permalink to &quot;一些教程&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li><a href="https://rsdlt.github.io/posts/rust-nvim-ide-guide-walkthrough-development-debug/" target="_blank" rel="noreferrer">Rust and nvim</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[HTTP协议]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-09-28-http-protocol.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-09-28-http-protocol.html</guid>
            <pubDate>Wed, 28 Sep 2022 04:19:15 GMT</pubDate>
            <content:encoded><![CDATA[<blockquote>
<p>HTTP 1.1之前的实现就不讨论了,因为它们已经过时太久了,我上网的时候就已经接触不到了,所以主要说说HTTP/1.1、HTTP/2.</p>
</blockquote>
<h2 id="http-1-1" tabindex="-1">HTTP/1.1 <a class="header-anchor" href="#http-1-1" aria-label="Permalink to &quot;HTTP/1.1&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="http-1-1协议报文简介" tabindex="-1">HTTP/1.1协议报文简介 <a class="header-anchor" href="#http-1-1协议报文简介" aria-label="Permalink to &quot;HTTP/1.1协议报文简介&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>CRLF: <code>\r\n</code></p>
<p>METHOD: HTTP请求,<code>GET</code>、<code>POST</code>、<code>PUT</code>、<code>DELETE</code>...</p>
<p>URI: 统一资源标识符,例如<code>/</code>,<code>/index.html</code>...</p>
<p>HTTPVersion: HTTP协议的版本号,例如<code>HTTP/1.1</code>,<code>HTTP/2</code></p>
<p>HEADERS: 请求头,例如<code>Host:localhost</code>,<code>Accept: */*</code>.</p>
<p>BODY: 请求体,例如说一个JSON数据<code>{&quot;name&quot;:&quot;fzdwx&quot;}</code></p>
<p>HTTPStatus: HTTP响应状态,常见的有<code>200</code>,<code>404</code>等</p>
<p>HTTPStatusDesc: HTTP响应状态描述,<code>200</code>对应的<code>OK</code>.</p>
</blockquote>
<h4 id="请求" tabindex="-1">请求 <a class="header-anchor" href="#请求" aria-label="Permalink to &quot;请求&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">METHOD&lt;SPACE&gt;URI&lt;SPACE&gt;HTTPVersion</span></span>
<span class="line"><span style="color: #A6ACCD">HEADERS</span></span>
<span class="line"><span style="color: #A6ACCD">&lt;CRLF&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">BODY</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div><p>示例:</p>
<div class="language-http"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">GET</span><span style="color: #A6ACCD"> /hello </span><span style="color: #F78C6C">HTTP</span><span style="color: #A6ACCD">/</span><span style="color: #F78C6C">1.1</span></span>
<span class="line"><span style="color: #F07178">Host</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">192.168.1.107:8889</span></span>
<span class="line"><span style="color: #F07178">Connection</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">keep-alive</span></span>
<span class="line"><span style="color: #F07178">Cache-Control</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">max-age=0</span></span>
<span class="line"><span style="color: #F07178">Upgrade-Insecure-Requests</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">1</span></span>
<span class="line"><span style="color: #F07178">User-Agent</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36</span></span>
<span class="line"><span style="color: #F07178">Accept</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></span>
<span class="line"><span style="color: #F07178">Accept-Encoding</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">gzip, deflate</span></span>
<span class="line"><span style="color: #F07178">Accept-Language</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">zh-CN,zh;q=0.9</span></span>
<span class="line"></span></code></pre>
</div><h4 id="响应" tabindex="-1">响应 <a class="header-anchor" href="#响应" aria-label="Permalink to &quot;响应&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">HTTPVersion HTTPStatus HTTPStatusDesc</span></span>
<span class="line"><span style="color: #A6ACCD">HEADERS</span></span>
<span class="line"><span style="color: #A6ACCD">&lt;CRLF&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">BODY</span></span>
<span class="line"><span style="color: #A6ACCD"></span></span></code></pre>
</div><p>示例:</p>
<blockquote>
<p>如果响应中使用了<code>transfer-encoding: chunked</code>这个来替代<code>Content-Length</code>
,就表示这是一个不固定大小的响应,结尾通常用<code>0\r\n</code>来分割.</p>
</blockquote>
<div class="language-http"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">HTTP/1.1 200 OK</span></span>
<span class="line"><span style="color: #F07178">transfer-encoding</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">chunked</span></span>
<span class="line"><span style="color: #F07178">content-type</span><span style="color: #F78C6C">:</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">application/json; charset=utf-8</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">0/r/n</span></span>
<span class="line"></span></code></pre>
</div><h3 id="http-1-1主要新特性" tabindex="-1">HTTP/1.1主要新特性 <a class="header-anchor" href="#http-1-1主要新特性" aria-label="Permalink to &quot;HTTP/1.1主要新特性&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>默认是长连接(<code>Connection: Keep-alive</code>),支持一个TCP连接处理多个请求.</li>
<li>缓存策略,在请求头中使用<code>Cache-Control</code>,<code>Expires</code>,<code>Last-Modified</code>,<code>ETag</code>等来控制.</li>
<li>允许响应分块,就是上面提到的<code>transfer-encoding: chunked</code>,允许服务端可以多次返回响应体.</li>
</ol>
<p>但是还是存在一定的问题,例如说如果有一个TCP连接阻塞了,还是会开启新的TCP连接进行处理请求.</p>
<h2 id="h2" tabindex="-1">H2 <a class="header-anchor" href="#h2" aria-label="Permalink to &quot;H2&quot;">&ZeroWidthSpace;</a></h2>
<p>HTTP2中的主要概念:</p>
<ol>
<li><code>Connection</code>: 一个TCP连接包含一个或多个<code>Stream</code>,所有的通讯都在<strong>一个TCP连接</strong>上完成.</li>
<li><code>Stream</code>: 一个可以双向通讯的数据流,包含一条或多条<code>Message</code>,每个数据流都一个<strong>唯一标识符</strong>以及<strong>可选的优先级</strong>信息.</li>
<li><code>Message</code>: 对应HTTP/1.1中的请求或响应,包含一条或多条<code>Frame</code>.</li>
<li><code>Frame</code>: <strong>最小传输单位</strong>,它以<strong>二进制</strong>进行编码.</li>
</ol>
<p><a href="/images/1.png">HTTP通讯简图</a></p>
<p>在HTTP/1.1中是有<code>Start Line</code> + <code>header</code> + <code>body</code> 组成的,而在H2中是由一个<code>HEADER Frame</code>以及多个<code>DATA Frame</code>组成的.</p>
<p><img src="/images/2.png" alt="HTTP/1.1与H2报文组成的区别"></p>
<h3 id="frame" tabindex="-1">Frame <a class="header-anchor" href="#frame" aria-label="Permalink to &quot;Frame&quot;">&ZeroWidthSpace;</a></h3>
<p>通常有一些公共的字段,例如<code>Length</code>,<code>Type</code>,<code>Flags</code>以及<code>Stream Id</code>；也各个类型所独有的字段.</p>
<p>分类如下:</p>
<ul>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-0" target="_blank" rel="noreferrer">DATA</a>: 用于传输http消息体.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-1" target="_blank" rel="noreferrer">HEADERS</a>: 用于传输首部字段.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-2" target="_blank" rel="noreferrer">PRIORITY</a>: 用于指定或重新指定引用资源的优先级.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-3" target="_blank" rel="noreferrer">RST_STREAM</a>: 用于通知流的非正常终止.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-4" target="_blank" rel="noreferrer">SETTINGS</a>: 用于约定客户端和服务端的配置数据.例如设置初识的双向流量控制窗口大小.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-9" target="_blank" rel="noreferrer">PUSH_PROMISE</a>: 服务端推送许可.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-10" target="_blank" rel="noreferrer">PING</a>: 用于计算往返时间,执行“ 活性” 检活.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-11" target="_blank" rel="noreferrer">GOAWAY</a>: 用于通知对端停止在当前连接中创建流.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-12" target="_blank" rel="noreferrer">WINDOW_UPDATE</a>: 用于调整个别流或个别连接的流量.</li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/#toc-17" target="_blank" rel="noreferrer">CONTINUATION</a>: 专门用于传递较大 HTTP 头部时的持续帧.</li>
</ul>
<h3 id="为什么h2必须要走https" tabindex="-1">为什么H2必须要走HTTPS？ <a class="header-anchor" href="#为什么h2必须要走https" aria-label="Permalink to &quot;为什么H2必须要走HTTPS？&quot;">&ZeroWidthSpace;</a></h3>
<p>这其实在H2标准中没有规定,主要是为了更方便的进行HTTP协议的 升级/协商,确认一个Web服务器是否支持H2通常有两种方式:</p>
<ol>
<li>在请求头中设置<code>Upgrade: HTTP/2.0</code>以及<code>Connection: Upgrade,HTTP2-Settings</code>等,类似升级到<code>Websocket</code>.</li>
<li>使用<code>TLS</code>中的<code>ALPN</code>(Application Layer Protocol Negotiation,应用层协议协商)中的<code>ALPN Next Protocol</code>
字段,在<code>Client Hello</code>与<code>Server Hello</code>这个阶段就可以确定下来.</li>
</ol>
<p>而现在的<strong>浏览器</strong>基本都是<strong>实现的方式二</strong>,即<strong>与HTTPS绑定在一起</strong>.但是如果我们不用浏览器进行访问,当然也可以不用HTTPS.</p>
<p>详细可<a href="https://imququ.com/post/protocol-negotiation-in-http2.html" target="_blank" rel="noreferrer">参考</a>.</p>
<h3 id="为什么h2能实现并行响应请求" tabindex="-1">为什么H2能实现并行响应请求? <a class="header-anchor" href="#为什么h2能实现并行响应请求" aria-label="Permalink to &quot;为什么H2能实现并行响应请求?&quot;">&ZeroWidthSpace;</a></h3>
<p>在HTTP/1.1中,请求与响应是一一对应的,在同一个连接里,客户端依次发送两个请求,一段时间以后收到来自服务器的一个响应,这个响应一定是对应于第一个发出去的请求的.
因为<strong>没有一个标志来表示哪个响应对应哪个请求</strong>.</p>
<p>而在H2中基于<code>Stream</code>和<code>Frame</code>的设计: <strong>每个<code>Frame</code>都带有<code>Stream Id</code>来标识是否为同一个<code>Stream</code>里面的数据</strong>,每个<code>Stream</code>
互不影响,这样就能做到在一个TCP里面连接里面传输多对请求/响应.</p>
<h2 id="h2的新特性" tabindex="-1">H2的新特性 <a class="header-anchor" href="#h2的新特性" aria-label="Permalink to &quot;H2的新特性&quot;">&ZeroWidthSpace;</a></h2>
<p>H2的对HTTP/1.1优化的核心就是 <strong>使用尽可能少的连接数</strong>.</p>
<ol>
<li>多路复用: 只用一个TCP连接就能处理多对 请求/响应 ,不用在开启另外的TCP连接,就是通过<code>Stream</code>与<code>Frame</code>来实现的.</li>
<li>二进制分帧: 使用<code>Frame</code>为最小单位进行通讯,并采用二进制编码.</li>
<li><a href="https://juejin.cn/post/7133238781452222472" target="_blank" rel="noreferrer">头部压缩</a>: 使用<code>HPACK</code>算法进行优化.
<ul>
<li>维护一份相同的<a href="https://httpwg.org/specs/rfc7541.html#static.table.definition" target="_blank" rel="noreferrer">静态字典</a>,包含常见的请求头的KV组合</li>
<li>一份动态字典,可以动态的扩容(每个连接单独维护)</li>
<li>支持哈夫曼编码(<a href="https://httpwg.org/specs/rfc7541.html#huffman.code" target="_blank" rel="noreferrer">静态哈夫曼码表</a>)</li>
</ul>
<blockquote>
<p>在HTTP/1中消息体可以用gzip进行压缩,但是请求头通常没有任何压缩,有时候请求头的数据可能比请求体的数据还多.</p>
</blockquote>
</li>
<li>请求优先级: 一般在<code>HEADERS</code>帧与<code>PRIORITY</code>帧中携带,通常依赖于服务端的支持程度.</li>
</ol>
<h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="生成测试签名" tabindex="-1">生成测试签名 <a class="header-anchor" href="#生成测试签名" aria-label="Permalink to &quot;生成测试签名&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">go</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">run</span><span style="color: #A6ACCD"> $GOROOT</span><span style="color: #C3E88D">/src/crypto/tls/generate_cert.go</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">--host</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">localhost</span></span>
<span class="line"></span></code></pre>
</div><h3 id="使用curl调试https" tabindex="-1">使用curl调试HTTPS <a class="header-anchor" href="#使用curl调试https" aria-label="Permalink to &quot;使用curl调试HTTPS&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">curl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">https://zcygov.cn</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-vv</span></span>
<span class="line"></span></code></pre>
</div><h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://httpwg.org/specs/rfc7540.html" target="_blank" rel="noreferrer">Hypertext Transfer Protocol Version 2 (HTTP/2)</a></li>
<li><a href="https://httpwg.org/specs/rfc7541.html" target="_blank" rel="noreferrer">HPACK: Header Compression for HTTP/2</a></li>
<li><a href="https://imququ.com/post/http2-resource.html" target="_blank" rel="noreferrer">HTTP/2资料汇总</a></li>
<li><a href="https://halfrost.com/http2-http-frames-definitions/" target="_blank" rel="noreferrer">HTTP/2中帧的定义</a></li>
<li><a href="https://www.dropbox.com/s/4duv6cqrhud4qzw/HTTP2%EF%BC%9A%E6%96%B0%E7%9A%84%E6%9C%BA%E9%81%87%E4%B8%8E%E6%8C%91%E6%88%98.pdf?dl=0" target="_blank" rel="noreferrer">HTTP/2新的机遇与挑战</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/566351358" target="_blank" rel="noreferrer">探索http1.0到http3.0的发展史,详解http2.0</a></li>
<li><a href="https://www.zhihu.com/question/34074946/answer/2264788574" target="_blank" rel="noreferrer">HTTP/2相比1.0有哪些重大改进</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[一个linux中的应用程序 launcher: Rofi]]></title>
            <link>https://fzdwx.github.io/content/posts/2022-09-18-about-rofi.html</link>
            <guid>https://fzdwx.github.io/content/posts/2022-09-18-about-rofi.html</guid>
            <pubDate>Sun, 18 Sep 2022 14:15:39 GMT</pubDate>
            <description><![CDATA[<blockquote>
<p>今天发现了一个 linux 下的 application launcher <a href="https://github.com/davatorium/rofi" target="_blank" rel="noreferrer">rofi</a> ,它可以快速切换窗口和启动程序,
我用它和<code>wmctrl</code>进行配合使用.</p>
</blockquote>
<p><strong>我的使用过程:</strong></p>
<p>1.Archlinux install</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">rofi</span></span>
<span class="line"></span></code></pre>
</div><p>2.添加自定义快捷键绑定 hotkey 为<code>alt</code>+<code>space</code>触发<code>rofi -show</code>.</p>
<p>3.press<code>alt</code>+<code>space</code>,然后使用<code>shift</code>+<code>left</code>or<code>right</code>进行切换 mode.</p>
]]></description>
            <content:encoded><![CDATA[<blockquote>
<p>今天发现了一个 linux 下的 application launcher <a href="https://github.com/davatorium/rofi" target="_blank" rel="noreferrer">rofi</a> ,它可以快速切换窗口和启动程序,
我用它和<code>wmctrl</code>进行配合使用.</p>
</blockquote>
<p><strong>我的使用过程:</strong></p>
<p>1.Archlinux install</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">yay</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-S</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">rofi</span></span>
<span class="line"></span></code></pre>
</div><p>2.添加自定义快捷键绑定 hotkey 为<code>alt</code>+<code>space</code>触发<code>rofi -show</code>.</p>
<p>3.press<code>alt</code>+<code>space</code>,然后使用<code>shift</code>+<code>left</code>or<code>right</code>进行切换 mode.</p>
<hr>
<p><strong>更改主题以及显示 icon</strong>:</p>
<p>1.生成配置文件</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">mkdir</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-p</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.config/rofi</span></span>
<span class="line"><span style="color: #FFCB6B">rofi</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-dump-config</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.config/rofi/config.rasi</span></span>
<span class="line"></span></code></pre>
</div><p>2.显示icon</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">sed</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">-i</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">8c show-icons: true;</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">~/.config/rofi/config.rasi</span></span>
<span class="line"></span></code></pre>
</div><p>3.更换主题</p>
<p>参考 <a href="https://github.com/lr-tech/rofi-themes-collection#installing-themes" target="_blank" rel="noreferrer">https://github.com/lr-tech/rofi-themes-collection#installing-themes</a></p>
<hr>
<p><strong>我的<code>wmctrl</code>的配置示例</strong>:</p>
<blockquote>
<p>使用<code>xprop WM_CLASS</code>获取前缀.</p>
</blockquote>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> chrome</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">wmctrl -x -a google-chrome || google-chrome-stable &gt; /dev/null 2&gt;&amp;1 &amp;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> note</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">wmctrl -x -a obsidian || /usr/bin/obsidian &gt; /dev/null 2&gt;&amp;1 &amp;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> codew</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">wmctrl -x -a code || /opt/code/code &gt; /dev/null 2&gt;&amp;1 &amp;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> idea</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">wmctrl -x -a jetbrains-idea || /opt/idea/bin/idea.sh &gt; /dev/null 2&gt;&amp;1 &amp;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #C792EA">alias</span><span style="color: #A6ACCD"> discord</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">wmctrl -x -a discord || /opt/discord/Discord &gt; /dev/null 2&gt;&amp;1 &amp;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"></span></code></pre>
</div>]]></content:encoded>
        </item>
    </channel>
</rss>