import{_ as s,c as n,o as a,V as l}from"./chunks/framework.22f4a02e.js";const e="/images/20230202002815.png",D=JSON.parse('{"title":"自定义一个 Neovim bufferline","description":"","frontmatter":{"title":"自定义一个 Neovim bufferline","date":"2023-02-01T15:59:53.000Z","tags":["project","nvim"],"layout":"post","cover":{"image":"/images/img%201.png"}},"headers":[],"relativePath":"content/posts/2023-02-01-bufline.md"}'),p={name:"content/posts/2023-02-01-bufline.md"},o=l(`<blockquote><p>现在比较流行的 buffer line 插件是 <a href="https://github.com/akinsho/bufferline.nvim" target="_blank" rel="noreferrer">akinsho/bufferline</a>,但是我感觉他太重了,而且不好看.比如说它可以跟 lsp 集成,可以切换各种 tab/buffer 模式等,但是不一定每个人都需要,而且各个顺序都固定了,总之就是<em>我想造轮子</em>: <a href="https://github.com/fzdwx/bufline.nvim.git" target="_blank" rel="noreferrer">fzdwx/bufline.nvim</a></p></blockquote><p>在 nvim 中定义 tabline 可以使用 <code>vim.opt.tabline=xxx</code> 来设置, 比如说下面这段代码,就很容易的实现一个 buffer line：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_G</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">qweqweqwe</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">retrun</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">this is my line</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- config</span></span>
<span class="line"><span style="color:#A6ACCD;">vim.</span><span style="color:#FFCB6B;">opt</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">tabline</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%!v:lua.qweqweqwe()</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+e+`" alt="Show"></p><p>那么接下来就很容易想到:</p><ol><li>获取所有 buffer</li><li>获取 buffer 对应文件的信息 <ul><li>比如说文件名称</li><li>显示文件 icon(由 <a href="https://github.com/nvim-tree/nvim-web-devicons" target="_blank" rel="noreferrer">nvim-tree/nvim-web-devicons</a> 支持)</li></ul></li><li>支持高亮</li></ol><p>如何实现的就不赘述了,如果有兴趣可以查看: <a href="https://github.com/fzdwx/bufline.nvim.git" target="_blank" rel="noreferrer">fzdwx/bufline.nvim</a>. 目前所有的内容都可以自定义：</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">folder</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">-- 入参是 buffer 数量,要求返回 Group: {hl,str}</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">dirName</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">-- 入参是当前 buffer id, 要求返回 Group</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">devicon</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">-- 入参是当前 buffer id,&quot;Sel/NoSel&quot;,是否选中, 要求返回 Group</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">title</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">-- 入参是当前 buffer id,&quot;Sel/NoSel&quot;, 要求返回 Group</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">modified</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">-- 入参是当前 buffer id, 要求返回 str</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">separator</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">-- 要求返回 Group</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 下面这两个方法也可以自定义,需要用户自己保证正确性</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">cell</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">-- 每个 buffer 对应的信息,入参是当前 buffer id,当前选择的buffer id,要求返回 group 列表</span></span>
<span class="line"><span style="color:#A6ACCD;">M.</span><span style="color:#FFCB6B;">bufline</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">-- 构造整个 bufline</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>str</code> 就是具体内容, <code>hl</code> 就是要高亮标签, 例如 <code>BufLineFolder</code>当前支持：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">BufLineTitleSel</span></span>
<span class="line"><span style="color:#A6ACCD;">BufLineTitleNoSel</span></span>
<span class="line"><span style="color:#A6ACCD;">BufLineFill</span></span>
<span class="line"><span style="color:#A6ACCD;">BufLine</span></span>
<span class="line"><span style="color:#A6ACCD;">BufLineFolder</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这些高亮标签都没有默认设置,需要用户自定义,例如:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vim.cmd([[au ColorScheme * hi BufLineTitleSel gui=none guibg=&#39;#282C34&#39; guifg=&#39;#5C6370&#39;]])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>设置高亮遇到的问题,当设置 icon 的背景为空时,有背景颜色的 icon 跟没有的会一大一小,后来没办法,只能让它都开启颜色的,也就是没选中的 buffer 也会开启颜色跟 bufferline 的一样.</p><p>在 lazy 中使用:</p><div class="language-lua line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fzdwx/bufline.nvim</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">BufEnter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    dependencies </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nvim-tree/nvim-web-devicons</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    },</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bufline</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        buf.</span><span style="color:#82AAFF;">setup</span><span style="color:#A6ACCD;">({</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">-- 自定义 separator</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">separator</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">                    str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"></span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                    hl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                }</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">        })</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,15),r=[o];function t(c,i,y,u,C,b){return a(),n("div",null,r)}const m=s(p,[["render",t]]);export{D as __pageData,m as default};
